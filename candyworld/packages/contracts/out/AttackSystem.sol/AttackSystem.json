{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "end",
          "type": "uint256"
        }
      ],
      "name": "Slice_OutOfBounds",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "indexed": false,
          "internalType": "uint48",
          "name": "start",
          "type": "uint48"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "Store_SpliceStaticData",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "_msgSender",
      "outputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_msgValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_world",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "defender",
          "type": "address"
        }
      ],
      "name": "attack",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50611d2f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c806345ec93541161005057806345ec9354146100b4578063d018db3e146100c7578063e1af802c146100dc57600080fd5b806301ffc9a71461006c578063119df25f14610094575b600080fd5b61007f61007a366004611853565b6100e4565b60405190151581526020015b60405180910390f35b61009c61017d565b6040516001600160a01b03909116815260200161008b565b604051601f19360135815260200161008b565b6100da6100d5366004611895565b61018c565b005b61009c61045a565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fb421288000000000000000000000000000000000000000000000000000000000148061017757507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b6000610187610464565b905090565b600061019661017d565b905060006101a382610496565b905060006101b084610496565b905060016101d083600001518460200151846000015185602001516105de565b63ffffffff161115610269576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f63616e206f6e6c792061747461636b20616e6f7468657220706c61796572206160448201527f7420616e2061646a6163656e7420706f736974696f6e0000000000000000000060648201526084015b60405180910390fd5b600061027484610656565b905080600003610306576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f61747461636b6572206d75737420686176652063616e647920746f206174746160448201527f636b0000000000000000000000000000000000000000000000000000000000006064820152608401610260565b600061031186610656565b9050806000036103a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f646566656e646572206d75737420686176652063616e647920746f206265206160448201527f747461636b6564000000000000000000000000000000000000000000000000006064820152608401610260565b6000818311156103be576103b782846118d4565b90506103c2565b5060015b60006103cd88610737565b90508063ffffffff1682106103e4575060006103f2565b6103ef6001826118e7565b90505b6103fc8882610829565b8063ffffffff166000036104505761041d87610418858761190b565b610953565b610428886000610953565b6104458761043589610a51565b61044090600161191e565b610afc565b610450886000610afc565b5050505050505050565b6000610187610ba1565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcc36013560601c806104935750335b90565b604080518082018252600080825260208201819052825160018082528185019094529192909190816020016020820280368337019050509050826001600160a01b031660001b816000815181106104ef576104ef611951565b60209081029190910181019190915260408051613a3160f11b818401527f67726173736c616e64000000000000000000000000000000000000000000000060228201527f506f736974696f6e00000000000000000000000000000000000000000000000060308201528151808203909301835281019052600090819081906105a09061057a90611967565b857e08020004040000000000000000000000000000000000000000000000000000610be0565b6040805180820190915260008082526020808301918252850151602486015160e090811c909252901c815292955090935091505b9695505050505050565b6000808363ffffffff168663ffffffff1611610603576105fe86856118e7565b61060d565b61060d84876118e7565b905060008363ffffffff168663ffffffff16116106335761062e86856118e7565b61063d565b61063d84876118e7565b9050610649818361191e565b925050505b949350505050565b60408051600180825281830190925260009182919060208083019080368337019050509050826001600160a01b031660001b8160008151811061069b5761069b611951565b60209081029190910181019190915260408051613a3160f11b818401526918d85b991e5ddbdc9b1960b21b60228201527f43616e647942616c616e636500000000000000000000000000000000000000006030820152815180820390930183528101905260009061064e9061070f90611967565b8360007e20010020000000000000000000000000000000000000000000000000000000610cb0565b60408051600180825281830190925260009182919060208083019080368337019050509050826001600160a01b031660001b8160008151811061077c5761077c611951565b60209081029190910181019190915260408051613a3160f11b928101929092526918d85b991e5ddbdc9b1960b21b60228301527f4865616c74680000000000000000000000000000000000000000000000000000603083015260009161081e91015b6040516020818303038152906040526107f690611967565b8360007e04010004000000000000000000000000000000000000000000000000000000610cb0565b60e01c949350505050565b60408051600180825281830190925260009160208083019080368337019050509050826001600160a01b031660001b8160008151811061086b5761086b611951565b60209081029190910181019190915260408051613a3160f11b928101929092526918d85b991e5ddbdc9b1960b21b60228301527f4865616c74680000000000000000000000000000000000000000000000000000603083015261094e91015b6040516020818303038152906040526108e290611967565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b166020820152839060009060240160408051601f198184030181529190527e04010004000000000000000000000000000000000000000000000000000000610d6d565b505050565b60408051600180825281830190925260009160208083019080368337019050509050826001600160a01b031660001b8160008151811061099557610995611951565b60209081029190910181019190915260408051613a3160f11b818401526918d85b991e5ddbdc9b1960b21b60228201527f43616e647942616c616e636500000000000000000000000000000000000000006030820152815180820390930183528101905261094e90610a0690611967565b82600085604051602001610a1c91815260200190565b60408051601f198184030181529190527e20010020000000000000000000000000000000000000000000000000000000610d6d565b60408051600180825281830190925260009182919060208083019080368337019050509050826001600160a01b031660001b81600081518110610a9657610a96611951565b60209081029190910181019190915260408051613a3160f11b928101929092526918d85b991e5ddbdc9b1960b21b60228301527f4b696c6c53747265616b00000000000000000000000000000000000000000000603083015260009161081e91016107de565b60408051600180825281830190925260009160208083019080368337019050509050826001600160a01b031660001b81600081518110610b3e57610b3e611951565b60209081029190910181019190915260408051613a3160f11b928101929092526918d85b991e5ddbdc9b1960b21b60228301527f4b696c6c53747265616b00000000000000000000000000000000000000000000603083015261094e91016108ca565b7f629a4c26e296b22a8e0856e9f6ecb2d1008d7e00081111962cd175fa7488e175546000906001600160a01b031680610bdb573391505090565b919050565b6060600060606000610bf0610ba1565b9050306001600160a01b03821603610c1957610c0d878787610e23565b93509350935050610ca7565b6040517f419b58fd0000000000000000000000000000000000000000000000000000000081526001600160a01b0382169063419b58fd90610c62908a908a908a906004016119c9565b600060405180830381865afa158015610c7f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c0d9190810190611a94565b93509350939050565b600080610cbb610ba1565b9050306001600160a01b03821603610ce157610cd986868686610f2b565b91505061064e565b6040517f8c364d590000000000000000000000000000000000000000000000000000000081526001600160a01b03821690638c364d5990610d2c908990899089908990600401611b01565b602060405180830381865afa158015610d49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd99190611b30565b6000610d77610ba1565b9050306001600160a01b03821603610d9b57610d968686868686610f61565b610e1b565b6040517f390baae00000000000000000000000000000000000000000000000000000000081526001600160a01b0382169063390baae090610de89089908990899089908990600401611b75565b600060405180830381600087803b158015610e0257600080fd5b505af1158015610e16573d6000803e3d6000fd5b505050505b505050505050565b6060600060606000610e3485610f7d565b9050610e41878783610fa0565b93506000610e4e86610fe4565b90508015610f2057610e608888611021565b935066ffffffffffffff841667ffffffffffffffff811115610e8457610e8461193b565b6040519080825280601f01601f191660200182016040528015610eae576020820181803683370190505b5092506020830160005b828160ff161015610f1d576000610ed08b8b84611034565b90506000610eed888460ff166028026038011c64ffffffffff1690565b9050610efc82826000876110b4565b610f06818561190b565b935050508080610f1590611bbc565b915050610eb8565b50505b505093509350939050565b6000610f58610f3a868661116a565b60ff858116601b0360080285901c16610f5385876111c0565b611203565b95945050505050565b610f768585610f7084876111c0565b85611254565b5050505050565b60006008610f8d600260206118d4565b610f979190611bdb565b9190911c919050565b606081600003610fbf5750604080516020810190915260008152610fdd565b6000610fcb858561116a565b9050610fd9818460006114b6565b9150505b9392505050565b60006008600180610ff7600260206118d4565b61100191906118d4565b61100b91906118d4565b6110159190611bdb565b8260ff911c1692915050565b6000610fdd61103084846114d9565b5490565b60008383604051602001611049929190611bf2565b604051602081830303815290604052805190602001208260f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167f3b4102da22e32d82fc925482184f16c09fd4281692720b87d124aef6da48a0f1181860001c90509392505050565b811561112657602082106110de576020820484019350602082816110da576110da611c2d565b0691505b81156111265760208290036000600019600883021c1990508554600885021b811984511682821617845250818511611117575050611164565b50600194909401939283900392015b5b602083106111485783548152600190930192601f1990920191602001611127565b82156111645780518454600019600886021c9182169119161781525b50505050565b6000828260405160200161117f929190611bf2565b60408051601f1981840301815291905280516020909101207f86425bff6b57326c7859e89024fe4f238ca327a1ae4a230180dd2f0e88aaa7d9189392505050565b600080805b8360ff168110156111fb576111e760ff601b83900360080287901c168361190b565b9150806111f381611c43565b9150506111c5565b509392505050565b6000602082106112295760208204840193506020828161122557611225611c2d565b0691505b508254600882021b6020829003808411156111fb576001850154600882021c82179150509392505050565b6000611260858561116a565b9050847f8c0b5119d4cec7b284c6b1b39252a03d1e2f2d7451a5895562524c113bb952be85858560405161129693929190611c5d565b60405180910390a2613a3160f11b857fffff00000000000000000000000000000000000000000000000000000000000016146112d25750611164565b60006112dd8661152f565b905060005b81518110156113bc5760008282815181106112ff576112ff611951565b6020026020010151905061132b6004826affffffffffffffffffffff191661160f90919063ffffffff16565b156113a9576040517f964f667d000000000000000000000000000000000000000000000000000000008152606082901c9063964f667d90611376908b908b908b908b90600401611c90565b600060405180830381600087803b15801561139057600080fd5b505af11580156113a4573d6000803e3d6000fd5b505050505b50806113b481611c43565b9150506112e2565b506113d0828565ffffffffffff168561162d565b60005b81518110156114ad5760008282815181106113f0576113f0611951565b6020026020010151905061141c6008826affffffffffffffffffffff191661160f90919063ffffffff16565b1561149a576040517fa8ba8721000000000000000000000000000000000000000000000000000000008152606082901c9063a8ba872190611467908b908b908b908b90600401611c90565b600060405180830381600087803b15801561148157600080fd5b505af1158015611495573d6000803e3d6000fd5b505050505b50806114a581611c43565b9150506113d3565b50505050505050565b60405160208101601f19603f85840101166040528382526111fb858585846110b4565b600082826040516020016114ee929190611bf2565b60408051601f1981840301815291905280516020909101207f14e2fcc58e58e68ec7edc30c8d50dccc3ce2714a623ec81f46b6a63922d76569189392505050565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061156957611569611951565b60209081029190910181019190915260408051613a3160f11b818401527f73746f726500000000000000000000000000000000000000000000000000000060228201527f53746f7265486f6f6b7300000000000000000000000000000000000000000000603082015281518082039093018352810190526000906115f8906115f090611967565b83600061163d565b905061064e61160a8260008451611677565b611707565b60008160ff16826116208560581c90565b1660ff1614905092915050565b61094e8383602084018451611718565b606061064e61164d858585611034565b6116708461165b8888611021565b9060ff166028026038011c64ffffffffff1690565b60006114b6565b600081831115801561168a575083518211155b6116c6578383836040517f23230fa300000000000000000000000000000000000000000000000000000000815260040161026093929190611cd4565b602084016116d4848261190b565b905060006116e285856118d4565b6fffffffffffffffffffffffffffffffff1660809290921b9190911795945050505050565b60606000610fdd83601560006117d8565b821561179257602083106117425760208304840193506020838161173e5761173e611c2d565b0692505b82156117925760208390036000600019600884021c1990506008850281811c91508451811c9050811987541682821617875550818311611783575050611164565b50600194909401939182019190035b5b602081106117b45781518455600190930192602090910190601f1901611793565b8015611164576000600019600883021c198554845182169119161785555050505050565b606060006117e68560801c90565b90506fffffffffffffffffffffffffffffffff8516600085828161180c5761180c611c2d565b04905060405193506020840160208202810160405281855260005b82811015611847578451871c825293870193602090910190600101611827565b50505050509392505050565b60006020828403121561186557600080fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114610fdd57600080fd5b6000602082840312156118a757600080fd5b81356001600160a01b0381168114610fdd57600080fd5b634e487b7160e01b600052601160045260246000fd5b81810381811115610177576101776118be565b63ffffffff828116828216039080821115611904576119046118be565b5092915050565b80820180821115610177576101776118be565b63ffffffff818116838216019080821115611904576119046118be565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b80516020808301519190811015611988576000198160200360031b1b821691505b50919050565b600081518084526020808501945080840160005b838110156119be578151875295820195908201906001016119a2565b509495945050505050565b8381526060602082015260006119e2606083018561198e565b9050826040830152949350505050565b60005b83811015611a0d5781810151838201526020016119f5565b50506000910152565b600082601f830112611a2757600080fd5b815167ffffffffffffffff80821115611a4257611a4261193b565b604051601f8301601f19908116603f01168101908282118183101715611a6a57611a6a61193b565b81604052838152866020858801011115611a8357600080fd5b6105d48460208301602089016119f2565b600080600060608486031215611aa957600080fd5b835167ffffffffffffffff80821115611ac157600080fd5b611acd87838801611a16565b9450602086015193506040860151915080821115611aea57600080fd5b50611af786828701611a16565b9150509250925092565b848152608060208201526000611b1a608083018661198e565b60ff949094166040830152506060015292915050565b600060208284031215611b4257600080fd5b5051919050565b60008151808452611b618160208601602086016119f2565b601f01601f19169290920160200192915050565b85815260a060208201526000611b8e60a083018761198e565b60ff861660408401528281036060840152611ba98186611b49565b9150508260808301529695505050505050565b600060ff821660ff8103611bd257611bd26118be565b60010192915050565b8082028115828204841417610177576101776118be565b82815260006020808301845182860160005b82811015611c2057815184529284019290840190600101611c04565b5091979650505050505050565b634e487b7160e01b600052601260045260246000fd5b60006000198203611c5657611c566118be565b5060010190565b606081526000611c70606083018661198e565b65ffffffffffff8516602084015282810360408401526105d48185611b49565b848152608060208201526000611ca9608083018661198e565b65ffffffffffff851660408401528281036060840152611cc98185611b49565b979650505050505050565b606081526000611ce76060830186611b49565b6020830194909452506040015291905056fea26469706673582212203419a6ba61a3ea831a1b01af9fce774ff7da6985b55989209740d8dae7879d7a64736f6c63430008150033",
    "sourceMap": "343:1354:149:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100675760003560e01c806345ec93541161005057806345ec9354146100b4578063d018db3e146100c7578063e1af802c146100dc57600080fd5b806301ffc9a71461006c578063119df25f14610094575b600080fd5b61007f61007a366004611853565b6100e4565b60405190151581526020015b60405180910390f35b61009c61017d565b6040516001600160a01b03909116815260200161008b565b604051601f19360135815260200161008b565b6100da6100d5366004611895565b61018c565b005b61009c61045a565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fb421288000000000000000000000000000000000000000000000000000000000148061017757507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b6000610187610464565b905090565b600061019661017d565b905060006101a382610496565b905060006101b084610496565b905060016101d083600001518460200151846000015185602001516105de565b63ffffffff161115610269576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f63616e206f6e6c792061747461636b20616e6f7468657220706c61796572206160448201527f7420616e2061646a6163656e7420706f736974696f6e0000000000000000000060648201526084015b60405180910390fd5b600061027484610656565b905080600003610306576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f61747461636b6572206d75737420686176652063616e647920746f206174746160448201527f636b0000000000000000000000000000000000000000000000000000000000006064820152608401610260565b600061031186610656565b9050806000036103a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f646566656e646572206d75737420686176652063616e647920746f206265206160448201527f747461636b6564000000000000000000000000000000000000000000000000006064820152608401610260565b6000818311156103be576103b782846118d4565b90506103c2565b5060015b60006103cd88610737565b90508063ffffffff1682106103e4575060006103f2565b6103ef6001826118e7565b90505b6103fc8882610829565b8063ffffffff166000036104505761041d87610418858761190b565b610953565b610428886000610953565b6104458761043589610a51565b61044090600161191e565b610afc565b610450886000610afc565b5050505050505050565b6000610187610ba1565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcc36013560601c806104935750335b90565b604080518082018252600080825260208201819052825160018082528185019094529192909190816020016020820280368337019050509050826001600160a01b031660001b816000815181106104ef576104ef611951565b60209081029190910181019190915260408051613a3160f11b818401527f67726173736c616e64000000000000000000000000000000000000000000000060228201527f506f736974696f6e00000000000000000000000000000000000000000000000060308201528151808203909301835281019052600090819081906105a09061057a90611967565b857e08020004040000000000000000000000000000000000000000000000000000610be0565b6040805180820190915260008082526020808301918252850151602486015160e090811c909252901c815292955090935091505b9695505050505050565b6000808363ffffffff168663ffffffff1611610603576105fe86856118e7565b61060d565b61060d84876118e7565b905060008363ffffffff168663ffffffff16116106335761062e86856118e7565b61063d565b61063d84876118e7565b9050610649818361191e565b925050505b949350505050565b60408051600180825281830190925260009182919060208083019080368337019050509050826001600160a01b031660001b8160008151811061069b5761069b611951565b60209081029190910181019190915260408051613a3160f11b818401526918d85b991e5ddbdc9b1960b21b60228201527f43616e647942616c616e636500000000000000000000000000000000000000006030820152815180820390930183528101905260009061064e9061070f90611967565b8360007e20010020000000000000000000000000000000000000000000000000000000610cb0565b60408051600180825281830190925260009182919060208083019080368337019050509050826001600160a01b031660001b8160008151811061077c5761077c611951565b60209081029190910181019190915260408051613a3160f11b928101929092526918d85b991e5ddbdc9b1960b21b60228301527f4865616c74680000000000000000000000000000000000000000000000000000603083015260009161081e91015b6040516020818303038152906040526107f690611967565b8360007e04010004000000000000000000000000000000000000000000000000000000610cb0565b60e01c949350505050565b60408051600180825281830190925260009160208083019080368337019050509050826001600160a01b031660001b8160008151811061086b5761086b611951565b60209081029190910181019190915260408051613a3160f11b928101929092526918d85b991e5ddbdc9b1960b21b60228301527f4865616c74680000000000000000000000000000000000000000000000000000603083015261094e91015b6040516020818303038152906040526108e290611967565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b166020820152839060009060240160408051601f198184030181529190527e04010004000000000000000000000000000000000000000000000000000000610d6d565b505050565b60408051600180825281830190925260009160208083019080368337019050509050826001600160a01b031660001b8160008151811061099557610995611951565b60209081029190910181019190915260408051613a3160f11b818401526918d85b991e5ddbdc9b1960b21b60228201527f43616e647942616c616e636500000000000000000000000000000000000000006030820152815180820390930183528101905261094e90610a0690611967565b82600085604051602001610a1c91815260200190565b60408051601f198184030181529190527e20010020000000000000000000000000000000000000000000000000000000610d6d565b60408051600180825281830190925260009182919060208083019080368337019050509050826001600160a01b031660001b81600081518110610a9657610a96611951565b60209081029190910181019190915260408051613a3160f11b928101929092526918d85b991e5ddbdc9b1960b21b60228301527f4b696c6c53747265616b00000000000000000000000000000000000000000000603083015260009161081e91016107de565b60408051600180825281830190925260009160208083019080368337019050509050826001600160a01b031660001b81600081518110610b3e57610b3e611951565b60209081029190910181019190915260408051613a3160f11b928101929092526918d85b991e5ddbdc9b1960b21b60228301527f4b696c6c53747265616b00000000000000000000000000000000000000000000603083015261094e91016108ca565b7f629a4c26e296b22a8e0856e9f6ecb2d1008d7e00081111962cd175fa7488e175546000906001600160a01b031680610bdb573391505090565b919050565b6060600060606000610bf0610ba1565b9050306001600160a01b03821603610c1957610c0d878787610e23565b93509350935050610ca7565b6040517f419b58fd0000000000000000000000000000000000000000000000000000000081526001600160a01b0382169063419b58fd90610c62908a908a908a906004016119c9565b600060405180830381865afa158015610c7f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c0d9190810190611a94565b93509350939050565b600080610cbb610ba1565b9050306001600160a01b03821603610ce157610cd986868686610f2b565b91505061064e565b6040517f8c364d590000000000000000000000000000000000000000000000000000000081526001600160a01b03821690638c364d5990610d2c908990899089908990600401611b01565b602060405180830381865afa158015610d49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd99190611b30565b6000610d77610ba1565b9050306001600160a01b03821603610d9b57610d968686868686610f61565b610e1b565b6040517f390baae00000000000000000000000000000000000000000000000000000000081526001600160a01b0382169063390baae090610de89089908990899089908990600401611b75565b600060405180830381600087803b158015610e0257600080fd5b505af1158015610e16573d6000803e3d6000fd5b505050505b505050505050565b6060600060606000610e3485610f7d565b9050610e41878783610fa0565b93506000610e4e86610fe4565b90508015610f2057610e608888611021565b935066ffffffffffffff841667ffffffffffffffff811115610e8457610e8461193b565b6040519080825280601f01601f191660200182016040528015610eae576020820181803683370190505b5092506020830160005b828160ff161015610f1d576000610ed08b8b84611034565b90506000610eed888460ff166028026038011c64ffffffffff1690565b9050610efc82826000876110b4565b610f06818561190b565b935050508080610f1590611bbc565b915050610eb8565b50505b505093509350939050565b6000610f58610f3a868661116a565b60ff858116601b0360080285901c16610f5385876111c0565b611203565b95945050505050565b610f768585610f7084876111c0565b85611254565b5050505050565b60006008610f8d600260206118d4565b610f979190611bdb565b9190911c919050565b606081600003610fbf5750604080516020810190915260008152610fdd565b6000610fcb858561116a565b9050610fd9818460006114b6565b9150505b9392505050565b60006008600180610ff7600260206118d4565b61100191906118d4565b61100b91906118d4565b6110159190611bdb565b8260ff911c1692915050565b6000610fdd61103084846114d9565b5490565b60008383604051602001611049929190611bf2565b604051602081830303815290604052805190602001208260f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167f3b4102da22e32d82fc925482184f16c09fd4281692720b87d124aef6da48a0f1181860001c90509392505050565b811561112657602082106110de576020820484019350602082816110da576110da611c2d565b0691505b81156111265760208290036000600019600883021c1990508554600885021b811984511682821617845250818511611117575050611164565b50600194909401939283900392015b5b602083106111485783548152600190930192601f1990920191602001611127565b82156111645780518454600019600886021c9182169119161781525b50505050565b6000828260405160200161117f929190611bf2565b60408051601f1981840301815291905280516020909101207f86425bff6b57326c7859e89024fe4f238ca327a1ae4a230180dd2f0e88aaa7d9189392505050565b600080805b8360ff168110156111fb576111e760ff601b83900360080287901c168361190b565b9150806111f381611c43565b9150506111c5565b509392505050565b6000602082106112295760208204840193506020828161122557611225611c2d565b0691505b508254600882021b6020829003808411156111fb576001850154600882021c82179150509392505050565b6000611260858561116a565b9050847f8c0b5119d4cec7b284c6b1b39252a03d1e2f2d7451a5895562524c113bb952be85858560405161129693929190611c5d565b60405180910390a2613a3160f11b857fffff00000000000000000000000000000000000000000000000000000000000016146112d25750611164565b60006112dd8661152f565b905060005b81518110156113bc5760008282815181106112ff576112ff611951565b6020026020010151905061132b6004826affffffffffffffffffffff191661160f90919063ffffffff16565b156113a9576040517f964f667d000000000000000000000000000000000000000000000000000000008152606082901c9063964f667d90611376908b908b908b908b90600401611c90565b600060405180830381600087803b15801561139057600080fd5b505af11580156113a4573d6000803e3d6000fd5b505050505b50806113b481611c43565b9150506112e2565b506113d0828565ffffffffffff168561162d565b60005b81518110156114ad5760008282815181106113f0576113f0611951565b6020026020010151905061141c6008826affffffffffffffffffffff191661160f90919063ffffffff16565b1561149a576040517fa8ba8721000000000000000000000000000000000000000000000000000000008152606082901c9063a8ba872190611467908b908b908b908b90600401611c90565b600060405180830381600087803b15801561148157600080fd5b505af1158015611495573d6000803e3d6000fd5b505050505b50806114a581611c43565b9150506113d3565b50505050505050565b60405160208101601f19603f85840101166040528382526111fb858585846110b4565b600082826040516020016114ee929190611bf2565b60408051601f1981840301815291905280516020909101207f14e2fcc58e58e68ec7edc30c8d50dccc3ce2714a623ec81f46b6a63922d76569189392505050565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061156957611569611951565b60209081029190910181019190915260408051613a3160f11b818401527f73746f726500000000000000000000000000000000000000000000000000000060228201527f53746f7265486f6f6b7300000000000000000000000000000000000000000000603082015281518082039093018352810190526000906115f8906115f090611967565b83600061163d565b905061064e61160a8260008451611677565b611707565b60008160ff16826116208560581c90565b1660ff1614905092915050565b61094e8383602084018451611718565b606061064e61164d858585611034565b6116708461165b8888611021565b9060ff166028026038011c64ffffffffff1690565b60006114b6565b600081831115801561168a575083518211155b6116c6578383836040517f23230fa300000000000000000000000000000000000000000000000000000000815260040161026093929190611cd4565b602084016116d4848261190b565b905060006116e285856118d4565b6fffffffffffffffffffffffffffffffff1660809290921b9190911795945050505050565b60606000610fdd83601560006117d8565b821561179257602083106117425760208304840193506020838161173e5761173e611c2d565b0692505b82156117925760208390036000600019600884021c1990506008850281811c91508451811c9050811987541682821617875550818311611783575050611164565b50600194909401939182019190035b5b602081106117b45781518455600190930192602090910190601f1901611793565b8015611164576000600019600883021c198554845182169119161785555050505050565b606060006117e68560801c90565b90506fffffffffffffffffffffffffffffffff8516600085828161180c5761180c611c2d565b04905060405193506020840160208202810160405281855260005b82811015611847578451871c825293870193602090910190600101611827565b50505050509392505050565b60006020828403121561186557600080fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114610fdd57600080fd5b6000602082840312156118a757600080fd5b81356001600160a01b0381168114610fdd57600080fd5b634e487b7160e01b600052601160045260246000fd5b81810381811115610177576101776118be565b63ffffffff828116828216039080821115611904576119046118be565b5092915050565b80820180821115610177576101776118be565b63ffffffff818116838216019080821115611904576119046118be565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b80516020808301519190811015611988576000198160200360031b1b821691505b50919050565b600081518084526020808501945080840160005b838110156119be578151875295820195908201906001016119a2565b509495945050505050565b8381526060602082015260006119e2606083018561198e565b9050826040830152949350505050565b60005b83811015611a0d5781810151838201526020016119f5565b50506000910152565b600082601f830112611a2757600080fd5b815167ffffffffffffffff80821115611a4257611a4261193b565b604051601f8301601f19908116603f01168101908282118183101715611a6a57611a6a61193b565b81604052838152866020858801011115611a8357600080fd5b6105d48460208301602089016119f2565b600080600060608486031215611aa957600080fd5b835167ffffffffffffffff80821115611ac157600080fd5b611acd87838801611a16565b9450602086015193506040860151915080821115611aea57600080fd5b50611af786828701611a16565b9150509250925092565b848152608060208201526000611b1a608083018661198e565b60ff949094166040830152506060015292915050565b600060208284031215611b4257600080fd5b5051919050565b60008151808452611b618160208601602086016119f2565b601f01601f19169290920160200192915050565b85815260a060208201526000611b8e60a083018761198e565b60ff861660408401528281036060840152611ba98186611b49565b9150508260808301529695505050505050565b600060ff821660ff8103611bd257611bd26118be565b60010192915050565b8082028115828204841417610177576101776118be565b82815260006020808301845182860160005b82811015611c2057815184529284019290840190600101611c04565b5091979650505050505050565b634e487b7160e01b600052601260045260246000fd5b60006000198203611c5657611c566118be565b5060010190565b606081526000611c70606083018661198e565b65ffffffffffff8516602084015282810360408401526105d48185611b49565b848152608060208201526000611ca9608083018661198e565b65ffffffffffff851660408401528281036060840152611cc98185611b49565b979650505050505050565b606081526000611ce76060830186611b49565b6020830194909452506040015291905056fea26469706673582212203419a6ba61a3ea831a1b01af9fce774ff7da6985b55989209740d8dae7879d7a64736f6c63430008150033",
    "sourceMap": "343:1354:149:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2311:188:113;;;;;;:::i;:::-;;:::i;:::-;;;516:14:151;;509:22;491:41;;479:2;464:18;2311:188:113;;;;;;;;1245:113;;;:::i;:::-;;;-1:-1:-1;;;;;707:55:151;;;689:74;;677:2;662:18;1245:113:113;543:226:151;1599:110:113;;;-1:-1:-1;;3585:14:113;3581:23;3568:37;920:25:151;;908:2;893:18;1599:110:113;774:177:151;379:1316:149;;;;;;:::i;:::-;;:::i;:::-;;1925:95:113;;;:::i;2311:188::-;2387:4;2406:50;;;485:152:109;2406:50:113;;:88;;-1:-1:-1;2460:34:113;;;188::106;2460::113;2406:88;2399:95;2311:188;-1:-1:-1;;2311:188:113:o;1245:113::-;1288:14;1317:36;:34;:36::i;:::-;1310:43;;1245:113;:::o;379:1316:149:-;426:16;445:12;:10;:12::i;:::-;426:31;;463:36;502:22;515:8;502:12;:22::i;:::-;463:61;;530:36;569:22;582:8;569:12;:22::i;:::-;530:61;;692:1;601:88;610:16;:18;;;630:16;:18;;;650:16;:18;;;670:16;:18;;;601:8;:88::i;:::-;:92;;;597:177;;;703:64;;;;;1472:2:151;703:64:149;;;1454:21:151;1511:2;1491:18;;;1484:30;1550:34;1530:18;;;1523:62;1621:24;1601:18;;;1594:52;1663:19;;703:64:149;;;;;;;;597:177;780:23;806:26;823:8;806:16;:26::i;:::-;780:52;;842:15;861:1;842:20;838:85;;872:44;;;;;1895:2:151;872:44:149;;;1877:21:151;1934:2;1914:18;;;1907:30;1973:34;1953:18;;;1946:62;2044:4;2024:18;;;2017:32;2066:19;;872:44:149;1693:398:151;838:85:149;928:23;954:26;971:8;954:16;:26::i;:::-;928:52;;990:15;1009:1;990:20;986:90;;1020:49;;;;;2298:2:151;1020:49:149;;;2280:21:151;2337:2;2317:18;;;2310:30;2376:34;2356:18;;;2349:62;2447:9;2427:18;;;2420:37;2474:19;;1020:49:149;2096:403:151;986:90:149;1082:19;1129:15;1111;:33;1107:137;;;1168:33;1186:15;1168;:33;:::i;:::-;1154:47;;1107:137;;;-1:-1:-1;1236:1:149;1107:137;1250:21;1274:20;1285:8;1274:10;:20::i;:::-;1250:44;;1319:14;1304:29;;:11;:29;1300:108;;-1:-1:-1;1360:1:149;1300:108;;;1382:19;1400:1;1382:19;;:::i;:::-;;;1300:108;1413:36;1424:8;1434:14;1413:10;:36::i;:::-;1459:14;:19;;1477:1;1459:19;1455:236;;1488:61;1505:8;1515:33;1533:15;1515;:33;:::i;:::-;1488:16;:61::i;:::-;1557:29;1574:8;1584:1;1557:16;:29::i;:::-;1595:54;1610:8;1620:24;1635:8;1620:14;:24::i;:::-;:28;;1647:1;1620:28;:::i;:::-;1595:14;:54::i;:::-;1657:27;1672:8;1682:1;1657:14;:27::i;:::-;420:1275;;;;;;;379:1316;:::o;1925:95:113:-;1964:7;1986:29;:27;:29::i;2779:381::-;3063:34;3067:14;3063:34;3050:48;3046:2;3042:57;;3110:45;;-1:-1:-1;3145:10:113;3110:45;2779:381;:::o;5920:427:69:-;-1:-1:-1;;;;;;;;;;;;;;;;;;6035:16:69;;6049:1;6035:16;;;;;;;;;-1:-1:-1;;;;6035:16:69;;;;;;;;;;;;;-1:-1:-1;6035:16:69;6006:45;;6096:6;-1:-1:-1;;;;;6080:24:69;6072:33;;6057:9;6067:1;6057:12;;;;;;;;:::i;:::-;;;;;;;;;;;:48;;;;1164:75;;;-1:-1:-1;;;1164:75:69;;;3874:92:151;1197:20:69;3982:11:151;;;3975:100;1219:19:69;4091:12:151;;;4084:101;1164:75:69;;;;;;;;;;4201:12:151;;1164:75:69;;-1:-1:-1;;;;;;6199:80:69;;1156:84;;;:::i;:::-;6244:9;1349:66;6199:21;:80::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;10783:27:73;;10777:34;10783:27;;;10777:34;8899:30:69;8942;;;9280:48;;;8899:30;;9280:48;;6112:167;;-1:-1:-1;6112:167:69;;-1:-1:-1;6112:167:69;-1:-1:-1;6292:50:69;6285:57;5920:427;-1:-1:-1;;;;;;5920:427:69:o;59:239:71:-;143:6;155:13;179:3;171:11;;:5;:11;;;:39;;199:11;205:5;199:3;:11;:::i;:::-;171:39;;;185:11;193:3;185:5;:11;:::i;:::-;155:55;;214:13;238:3;230:11;;:5;:11;;;:39;;258:11;264:5;258:3;:11;:::i;:::-;230:39;;;244:11;252:3;244:5;:11;:::i;:::-;214:55;-1:-1:-1;280:15:71;214:55;280:6;:15;:::i;:::-;273:22;;;;59:239;;;;;;;:::o;4044:304:142:-;4148:16;;;4162:1;4148:16;;;;;;;;;4096:15;;;;4148:16;;;;;;;;;;;;-1:-1:-1;4148:16:142;4119:45;;4209:6;-1:-1:-1;;;;;4193:24:142;4185:33;;4170:9;4180:1;4170:12;;;;;;;;:::i;:::-;;;;;;;;;;;:48;;;;1164:80;;;-1:-1:-1;;;1164:80:142;;;3874:92:151;-1:-1:-1;;;3982:11:151;;;3975:100;1220:23:142;4091:12:151;;;4084:101;1164:80:142;;;;;;;;;;4201:12:151;;1164:80:142;;-1:-1:-1;;4241:64:142;;1156:89;;;:::i;:::-;4278:9;4289:1;1358:66;4241:26;:64::i;4003:299:144:-;4104:16;;;4118:1;4104:16;;;;;;;;;4055:12;;;;4104:16;;;;;;;;;;;;-1:-1:-1;4104:16:144;4075:45;;4165:6;-1:-1:-1;;;;;4149:24:144;4141:33;;4126:9;4136:1;4126:12;;;;;;;;:::i;:::-;;;;;;;;;;;:48;;;;1164:74;;;-1:-1:-1;;;1164:74:144;;;3874:92:151;;;;-1:-1:-1;;;3982:11:151;;;3975:100;1220:17:144;4091:12:151;;;4084:101;4181:13:144;;4197:64;;4201:12:151;1164:74:144;;;;;;;;;;;;;1156:83;;;:::i;:::-;4234:9;4245:1;1346:66;4197:26;:64::i;:::-;4275:21;;;4003:299;-1:-1:-1;;;;4003:299:144:o;5289:260::-;5376:16;;;5390:1;5376:16;;;;;;;;;5347:26;;5376:16;;;;;;;;;;;-1:-1:-1;5376:16:144;5347:45;;5437:6;-1:-1:-1;;;;;5421:24:144;5413:33;;5398:9;5408:1;5398:12;;;;;;;;:::i;:::-;;;;;;;;;;;:48;;;;1164:74;;;-1:-1:-1;;;1164:74:144;;;3874:92:151;;;;-1:-1:-1;;;3982:11:151;;;3975:100;1220:17:144;4091:12:151;;;4084:101;5453:91:144;;4201:12:151;1164:74:144;;;;;;;;;;;;;1156:83;;;:::i;:::-;5504:25;;4747:66:151;4733:3;4729:16;;;4725:89;5504:25:144;;;4713:102:151;5490:9:144;;5501:1;;4831:11:151;;5504:25:144;;;-1:-1:-1;;5504:25:144;;;;;;;;;1346:66;5453:26;:91::i;:::-;5341:208;5289:260;;:::o;5362:265:142:-;5452:16;;;5466:1;5452:16;;;;;;;;;5423:26;;5452:16;;;;;;;;;;;-1:-1:-1;5452:16:142;5423:45;;5513:6;-1:-1:-1;;;;;5497:24:142;5489:33;;5474:9;5484:1;5474:12;;;;;;;;:::i;:::-;;;;;;;;;;;:48;;;;1164:80;;;-1:-1:-1;;;1164:80:142;;;3874:92:151;-1:-1:-1;;;3982:11:151;;;3975:100;1220:23:142;4091:12:151;;;4084:101;1164:80:142;;;;;;;;;;4201:12:151;;1164:80:142;;5529:93;;1156:89;;;:::i;:::-;5566:9;5577:1;5598:7;5580:27;;;;;;4982:19:151;;5026:2;5017:12;;4853:182;5580:27:142;;;;-1:-1:-1;;5580:27:142;;;;;;;;;1358:66;5529:26;:93::i;4015:299:145:-;4116:16;;;4130:1;4116:16;;;;;;;;;4067:12;;;;4116:16;;;;;;;;;;;;-1:-1:-1;4116:16:145;4087:45;;4177:6;-1:-1:-1;;;;;4161:24:145;4153:33;;4138:9;4148:1;4138:12;;;;;;;;:::i;:::-;;;;;;;;;;;:48;;;;1164:78;;;-1:-1:-1;;;1164:78:145;;;3874:92:151;;;;-1:-1:-1;;;3982:11:151;;;3975:100;1220:21:145;4091:12:151;;;4084:101;4193:13:145;;4209:64;;4201:12:151;1164:78:145;3691:528:151;5301:260:145;5388:16;;;5402:1;5388:16;;;;;;;;;5359:26;;5388:16;;;;;;;;;;;-1:-1:-1;5388:16:145;5359:45;;5449:6;-1:-1:-1;;;;;5433:24:145;5425:33;;5410:9;5420:1;5410:12;;;;;;;;:::i;:::-;;;;;;;;;;;:48;;;;1164:78;;;-1:-1:-1;;;1164:78:145;;;3874:92:151;;;;-1:-1:-1;;;3982:11:151;;;3975:100;1220:21:145;4091:12:151;;;4084:101;5465:91:145;;4201:12:151;1164:78:145;3691:528:151;1766:227:92;996:42;1855:22;1816:7;;-1:-1:-1;;;;;1855:22:92;;1883:106;;1931:10;1924:17;;;1766:227;:::o;1883:106::-;1969:13;1766:227;-1:-1:-1;1766:227:92:o;15275:430::-;15405:12;15419:13;15434:12;15454:21;15478:17;:15;:17::i;:::-;15454:41;-1:-1:-1;15530:4:92;-1:-1:-1;;;;;15505:30:92;;;15501:200;;15552:51;15572:7;15581:8;15591:11;15552:19;:51::i;:::-;15545:58;;;;;;;;;15501:200;15631:63;;;;;-1:-1:-1;;;;;15631:31:92;;;;;:63;;15663:7;;15672:8;;15682:11;;15631:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15631:63:92;;;;;;;;;;;;:::i;15275:430::-;;;;;;;;:::o;17702:457::-;17859:7;17874:21;17898:17;:15;:17::i;:::-;17874:41;-1:-1:-1;17950:4:92;-1:-1:-1;;;;;17925:30:92;;;17921:234;;17972:68;17997:7;18006:8;18016:10;18028:11;17972:24;:68::i;:::-;17965:75;;;;;17921:234;18068:80;;;;;-1:-1:-1;;;;;18068:36:92;;;;;:80;;18105:7;;18114:8;;18124:10;;18136:11;;18068:80;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;10690:455::-;10862:21;10886:17;:15;:17::i;:::-;10862:41;-1:-1:-1;10938:4:92;-1:-1:-1;;;;;10913:30:92;;;10909:232;;10953:74;10978:7;10987:8;10997:10;11009:4;11015:11;10953:24;:74::i;:::-;10909:232;;;11048:86;;;;;-1:-1:-1;;;;;11048:36:92;;;;;:86;;11085:7;;11094:8;;11104:10;;11116:4;;11122:11;;11048:86;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10909:232;10856:289;10690:455;;;;;:::o;31801:1314:91:-;31931:23;31956:28;31986:24;32052:20;32075:30;:11;:28;:30::i;:::-;32052:53;;32166:65;32199:7;32208:8;32218:12;32166:32;:65::i;:::-;32153:78;;32295:24;32322:30;:11;:28;:30::i;:::-;32295:57;-1:-1:-1;32362:20:91;;32358:753;;32455:66;32503:7;32512:8;32455:47;:66::i;:::-;32438:83;-1:-1:-1;6126:59:86;;;32573:33:91;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;32573:33:91;-1:-1:-1;32559:47:91;-1:-1:-1;826:4:85;816:15;;32614:21:91;32678:427;32696:16;32692:1;:20;;;32678:427;;;32729:27;32759:63;32801:7;32810:8;32820:1;32759:41;:63::i;:::-;32729:93;-1:-1:-1;32832:14:91;32849:25;:14;32872:1;6743:16:86;;862:5;6743:16;785:5;6732:27;6692:68;6670:92;;;6555:218;32849:25:91;32832:42;;32884:110;32915:19;32944:6;32960:1;32978:13;32884:12;:110::i;:::-;33073:23;33090:6;33073:23;;:::i;:::-;;;32719:386;;32714:3;;;;;:::i;:::-;;;;32678:427;;;;32384:727;32358:753;32012:1103;;31801:1314;;;;;;;:::o;35212:541::-;35369:7;35506:242;35550:59;35591:7;35600:8;35550:40;:59::i;:::-;35627:31;;;;4044:19:74;:27;537:1:98;4043:44:74;4009:79;;;3996:93;35676:63:91;35715:11;35728:10;35676:38;:63::i;:::-;35506:17;:242::i;:::-;35493:255;35212:541;-1:-1:-1;;;;;35212:541:91:o;22277:355::-;22449:178;22483:7;22508:8;22538:63;22577:11;22590:10;22538:38;:63::i;:::-;22616:4;22449:16;:178::i;:::-;22277:355;;;;;:::o;4319:171:74:-;4393:7;537:1:98;1247:13;1259:1;334:2;1247:13;:::i;:::-;1246:30;;;;:::i;:::-;4415:70:74;;;;;4319:171;-1:-1:-1;4319:171:74:o;47636:360:91:-;47762:12;47786:6;47796:1;47786:11;47782:26;;-1:-1:-1;47799:9:91;;;;;;;;;-1:-1:-1;47799:9:91;;;;47782:26;47849:16;47868:41;47891:7;47900:8;47868:22;:41::i;:::-;47849:60;;47922:69;47953:8;47971:6;47987:1;47922:12;:69::i;:::-;47915:76;;;47636:360;;;;;;:::o;5098:173:74:-;5172:7;537:1:98;1597;;1577:13;1589:1;334:2;1577:13;:::i;:::-;:17;;;;:::i;:::-;:21;;;;:::i;:::-;1576:38;;;;:::i;:::-;5208:11:74;5187:79;5200:65;;5187:79;;5098:173;-1:-1:-1;;5098:173:74:o;52752:301:91:-;52873:13;52965:82;52996:48;53026:7;53035:8;52996:29;:48::i;:::-;4572:21:90;;4466:137;51555:274:91;51699:7;51804;51813:8;51787:35;;;;;;;;;:::i;:::-;;;;;;;;;;;;;51777:46;;;;;;51756:17;51749:25;;51729:45;;;41298:34;51729:45;:94;51721:103;;51714:110;;51555:274;;;;;:::o;5933:2258:90:-;6050:10;;6046:1421;;6203:2;6193:6;:12;6189:122;;6266:2;6257:6;:11;6239:29;;;;6290:2;6280:12;;;;;;:::i;:::-;;;;6189:122;6401:10;;6397:1064;;6609:2;:11;;;6483:21;-1:-1:-1;;1080:1:99;1067:14;;1045:37;1043:40;6641:38:90;;6863:14;6857:21;6853:1;6845:6;6841:14;6837:42;7110:4;7106:9;7090:13;7084:20;7080:36;7011:4;6999:10;6995:21;6938:192;6911:13;6891:251;;7201:13;7191:6;:23;7187:36;;7216:7;;;;7187:36;-1:-1:-1;7364:1:90;7346:19;;;;;7419:23;;;;;7377:30;6397:1064;7496:253;7513:2;7503:6;:12;7496:253;;7607:21;;7585:44;;7682:1;7664:19;;;;-1:-1:-1;;7722:12:90;;;;7710:2;7693:19;7496:253;;;7817:10;;7813:374;;8119:20;;8034:21;;-1:-1:-1;;1080:1:99;1067:14;;1045:37;8115:36:90;;;1043:40:99;;8030:32:90;7979:184;7936:237;;7813:374;5933:2258;;;;:::o;49619:191:91:-;49721:7;49785;49794:8;49768:35;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;49768:35:91;;;;;;;;;49758:46;;49768:35;49758:46;;;;41226:22;49751:53;;49619:191;-1:-1:-1;;;49619:191:91:o;50636:242::-;50732:7;;;50771:84;50791:10;50787:14;;:1;:14;50771:84;;;50816:32;3996:93:74;4044:19;:27;;;537:1:98;4043:44:74;4009:79;;;3996:93;50816:32:91;;:::i;:::-;;-1:-1:-1;50803:3:91;;;;:::i;:::-;;;;50771:84;;;-1:-1:-1;50867:6:91;50636:242;-1:-1:-1;;;50636:242:91:o;8680:790:90:-;8778:14;8814:2;8804:6;:12;8800:112;;8873:2;8864:6;:11;8846:29;;;;8895:2;8885:12;;;;;;:::i;:::-;;;;8800:112;-1:-1:-1;9092:21:90;;9088:1;9076:14;;9072:42;9240:2;:11;;;9322:22;;;9318:148;;;9447:1;9431:14;9427:22;9421:29;9417:1;9402:13;9398:21;9394:57;9386:6;9383:69;9373:79;;8794:676;8680:790;;;;;:::o;16359:1506:91:-;16480:16;16499:59;16540:7;16549:8;16499:40;:59::i;:::-;16480:78;;16660:7;16616:100;16679:8;16696:5;16709:4;16616:100;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;16781:7:91;:35;;;16777:62;;16826:7;;;16777:62;16984:22;17009:24;17025:7;17009:15;:24::i;:::-;16984:49;;17044:9;17039:328;17059:5;:12;17055:1;:16;17039:328;;;17086:9;17108:5;17114:1;17108:8;;;;;;;;:::i;:::-;;;;;;;17086:31;;17129:41;548:6:100;17129:4:91;:14;;;;;:41;;;;:::i;:::-;17125:236;;;17182:170;;;;;3392:35:75;;;;;17182:54:91;;:170;;17258:7;;17287:8;;17314:5;;17337:4;;17182:170;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17125:236;-1:-1:-1;17073:3:91;;;;:::i;:::-;;;;17039:328;;;;17416:70;17448:8;17466:5;17416:70;;17479:4;17416:13;:70::i;:::-;17540:9;17535:326;17555:5;:12;17551:1;:16;17535:326;;;17582:9;17604:5;17610:1;17604:8;;;;;;;;:::i;:::-;;;;;;;17582:31;;17625:40;657:6:100;17625:4:91;:14;;;;;:40;;;;:::i;:::-;17621:234;;;17677:169;;;;;3392:35:75;;;;;17677:53:91;;:169;;17752:7;;17781:8;;17808:5;;17831:4;;17677:169;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17621:234;-1:-1:-1;17569:3:91;;;;:::i;:::-;;;;17535:326;;;;16474:1391;;16359:1506;;;;:::o;4903:665:90:-;5315:4;5309:11;5356:4;5344:17;;-1:-1:-1;;5234:14:90;5403:26;;;5234:14;5230:28;5375:4;5368:63;5475:6;5467;5460:22;5493:51;5498:14;5514:6;5522;5530:13;5493:4;:51::i;52184:230:91:-;52305:7;52389;52398:8;52372:35;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;52372:35:91;;;;;;;;;52362:46;;52372:35;52362:46;;;;41389:40;52335:73;;52184:230;-1:-1:-1;;;52184:230:91:o;4372:342:96:-;4488:16;;;4502:1;4488:16;;;;;;;;;4429:22;;4459:26;;4488:16;;;;;;;;;;;;-1:-1:-1;4488:16:96;4459:45;;4543:7;4510:9;4520:1;4510:12;;;;;;;;:::i;:::-;;;;;;;;;;;:41;;;;1047:73;;;-1:-1:-1;;;1047:73:96;;;3874:92:151;1080:16:96;3982:11:151;;;3975:100;1098:21:96;4091:12:151;;;4084:101;1047:73:96;;;;;;;;;;4201:12:151;;1047:73:96;;-1:-1:-1;;4579:49:96;;1039:82;;;:::i;:::-;4615:9;4626:1;4579:25;:49::i;:::-;4558:70;;4642:66;:44;4663:5;4670:1;4673:5;:12;4642:20;:44::i;:::-;:64;:66::i;2891:136:75:-;2961:4;3013:9;2980:42;;2999:9;2981:15;2991:4;3790:26;;;3660:162;2981:15;:27;2980:42;;;2973:49;;2891:136;;;;:::o;850:162:90:-;939:68;945:14;961:6;826:4:85;816:15;;995:4:90;:11;939:5;:68::i;36221:522:91:-;36357:12;36481:257;36520:79;36562:7;36571:8;36581:17;36520:41;:79::i;:::-;36617:93;36692:17;36617:66;36665:7;36674:8;36617:47;:66::i;:::-;:74;6743:16:86;;862:5;6743:16;785:5;6732:27;6692:68;6670:92;;;6555:218;36617:93:91;36728:1;36481:12;:257::i;2022:570:89:-;2113:5;2211:3;2202:5;:12;;:34;;;;;2225:4;:11;2218:3;:18;;2202:34;2196:85;;2264:4;2270:5;2277:3;2246:35;;;;;;;;;;;;;:::i;2196:85::-;2349:4;2339:15;;2396:17;2408:5;2339:15;2396:17;:::i;:::-;;-1:-1:-1;2419:12:89;2434:11;2440:5;2434:3;:11;:::i;:::-;643:17;2570:15;2562:3;2550:15;;;;2549:37;;;;;;-1:-1:-1;;;;;2022:570:89:o;40037:220:102:-;40103:24;40135:30;40168:32;40186:6;40194:2;40198:1;40168:17;:32::i;1373:2326:90:-;1486:10;;1482:1491;;1639:2;1629:6;:12;1625:122;;1702:2;1693:6;:11;1675:29;;;;1726:2;1716:12;;;;;;:::i;:::-;;;;1625:122;1837:10;;1833:1134;;2045:2;:11;;;1919:21;-1:-1:-1;;1080:1:99;1067:14;;1045:37;1043:40;2077:31:90;;2277:1;2269:6;2265:14;2313:4;2302:9;2298:20;2290:28;;2368:13;2362:20;2351:9;2347:36;2329:54;;2616:4;2612:9;2595:14;2589:21;2585:37;2516:4;2504:10;2500:21;2443:193;2415:14;2395:253;;2707:13;2697:6;:23;2693:36;;2722:7;;;;2693:36;-1:-1:-1;2870:1:90;2852:19;;;;;2883:30;;;;2925:23;;1833:1134;3003:253;3020:2;3010:6;:12;3003:253;;3115:20;;3092:44;;3189:1;3171:19;;;;3217:2;3200:19;;;;-1:-1:-1;;3229:12:90;3003:253;;;3324:10;;3320:375;;3344:12;-1:-1:-1;;1080:1:99;1067:14;;1045:37;1043:40;3626:21:90;;3542:20;;3538:31;;3649:9;;3622:37;3487:184;3443:238;;-1:-1:-1;1373:2326:90;;;;:::o;2631:1127:104:-;2751:22;2781:21;2805;:11;2946:3:89;2924:25;;2850:104;2805:21:104;2781:45;-1:-1:-1;643:17:89;3187:38;;2832:20:104;2994:11;3187:38:89;2994:11:104;2979:26;;;;:::i;:::-;;2965:40;;3114:4;3108:11;3099:20;;3157:4;3150:5;3146:16;3217:2;3204:11;3200:20;3186:12;3182:39;3176:4;3169:53;3265:11;3258:5;3251:26;3308:1;3285:463;3324:11;3321:1;3318:18;3285:463;;;3718:20;;3697:42;;3676:64;;3590:31;;;;3503:4;3485:23;;;;3411:1;3404:9;3285:463;;;3289:28;;3066:688;;;2631:1127;;;;;:::o;14:332:151:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:66;223:5;219:78;212:5;209:89;199:117;;312:1;309;302:12;956:309;1015:6;1068:2;1056:9;1047:7;1043:23;1039:32;1036:52;;;1084:1;1081;1074:12;1036:52;1123:9;1110:23;-1:-1:-1;;;;;1166:5:151;1162:54;1155:5;1152:65;1142:93;;1231:1;1228;1221:12;2504:184;-1:-1:-1;;;2553:1:151;2546:88;2653:4;2650:1;2643:15;2677:4;2674:1;2667:15;2693:128;2760:9;;;2781:11;;;2778:37;;;2795:18;;:::i;2826:175::-;2894:10;2937;;;2925;;;2921:27;;2960:12;;;2957:38;;;2975:18;;:::i;:::-;2957:38;2826:175;;;;:::o;3006:125::-;3071:9;;;3092:10;;;3089:36;;;3105:18;;:::i;3136:172::-;3203:10;3233;;;3245;;;3229:27;;3268:11;;;3265:37;;;3282:18;;:::i;3313:184::-;-1:-1:-1;;;3362:1:151;3355:88;3462:4;3459:1;3452:15;3486:4;3483:1;3476:15;3502:184;-1:-1:-1;;;3551:1:151;3544:88;3651:4;3648:1;3641:15;3675:4;3672:1;3665:15;4224:357;4342:12;;4389:4;4378:16;;;4372:23;;4342:12;4407:16;;4404:171;;;-1:-1:-1;;4487:6:151;4481:4;4477:17;4474:1;4470:25;4466:98;4459:5;4455:110;4446:119;;4404:171;;4224:357;;;:::o;5040:435::-;5093:3;5131:5;5125:12;5158:6;5153:3;5146:19;5184:4;5213:2;5208:3;5204:12;5197:19;;5250:2;5243:5;5239:14;5271:1;5281:169;5295:6;5292:1;5289:13;5281:169;;;5356:13;;5344:26;;5390:12;;;;5425:15;;;;5317:1;5310:9;5281:169;;;-1:-1:-1;5466:3:151;;5040:435;-1:-1:-1;;;;;5040:435:151:o;5480:468::-;5780:6;5769:9;5762:25;5823:2;5818;5807:9;5803:18;5796:30;5743:4;5843:56;5895:2;5884:9;5880:18;5872:6;5843:56;:::i;:::-;5835:64;;5935:6;5930:2;5919:9;5915:18;5908:34;5480:468;;;;;;:::o;5953:250::-;6038:1;6048:113;6062:6;6059:1;6056:13;6048:113;;;6138:11;;;6132:18;6119:11;;;6112:39;6084:2;6077:10;6048:113;;;-1:-1:-1;;6195:1:151;6177:16;;6170:27;5953:250::o;6208:757::-;6261:5;6314:3;6307:4;6299:6;6295:17;6291:27;6281:55;;6332:1;6329;6322:12;6281:55;6361:6;6355:13;6387:18;6424:2;6420;6417:10;6414:36;;;6430:18;;:::i;:::-;6564:2;6558:9;6626:4;6618:13;;-1:-1:-1;;6614:22:151;;;6638:2;6610:31;6606:40;6594:53;;;6662:18;;;6682:22;;;6659:46;6656:72;;;6708:18;;:::i;:::-;6748:10;6744:2;6737:22;6783:2;6775:6;6768:18;6829:3;6822:4;6817:2;6809:6;6805:15;6801:26;6798:35;6795:55;;;6846:1;6843;6836:12;6795:55;6859:76;6932:2;6925:4;6917:6;6913:17;6906:4;6898:6;6894:17;6859:76;:::i;6970:654::-;7111:6;7119;7127;7180:2;7168:9;7159:7;7155:23;7151:32;7148:52;;;7196:1;7193;7186:12;7148:52;7229:9;7223:16;7258:18;7299:2;7291:6;7288:14;7285:34;;;7315:1;7312;7305:12;7285:34;7338:60;7390:7;7381:6;7370:9;7366:22;7338:60;:::i;:::-;7328:70;;7438:2;7427:9;7423:18;7417:25;7407:35;;7488:2;7477:9;7473:18;7467:25;7451:41;;7517:2;7507:8;7504:16;7501:36;;;7533:1;7530;7523:12;7501:36;;7556:62;7610:7;7599:8;7588:9;7584:24;7556:62;:::i;:::-;7546:72;;;6970:654;;;;;:::o;7629:548::-;7953:6;7942:9;7935:25;7996:3;7991:2;7980:9;7976:18;7969:31;7916:4;8017:57;8069:3;8058:9;8054:19;8046:6;8017:57;:::i;:::-;8122:4;8110:17;;;;8105:2;8090:18;;8083:45;-1:-1:-1;8159:2:151;8144:18;8137:34;8009:65;7629:548;-1:-1:-1;;7629:548:151:o;8182:184::-;8252:6;8305:2;8293:9;8284:7;8280:23;8276:32;8273:52;;;8321:1;8318;8311:12;8273:52;-1:-1:-1;8344:16:151;;8182:184;-1:-1:-1;8182:184:151:o;8371:329::-;8412:3;8450:5;8444:12;8477:6;8472:3;8465:19;8493:76;8562:6;8555:4;8550:3;8546:14;8539:4;8532:5;8528:16;8493:76;:::i;:::-;8614:2;8602:15;-1:-1:-1;;8598:88:151;8589:98;;;;8689:4;8585:109;;8371:329;-1:-1:-1;;8371:329:151:o;8705:709::-;9075:6;9064:9;9057:25;9118:3;9113:2;9102:9;9098:18;9091:31;9038:4;9145:57;9197:3;9186:9;9182:19;9174:6;9145:57;:::i;:::-;9250:4;9242:6;9238:17;9233:2;9222:9;9218:18;9211:45;9304:9;9296:6;9292:22;9287:2;9276:9;9272:18;9265:50;9332:32;9357:6;9349;9332:32;:::i;:::-;9324:40;;;9401:6;9395:3;9384:9;9380:19;9373:35;8705:709;;;;;;;;:::o;9419:175::-;9456:3;9500:4;9493:5;9489:16;9529:4;9520:7;9517:17;9514:43;;9537:18;;:::i;:::-;9586:1;9573:15;;9419:175;-1:-1:-1;;9419:175:151:o;9599:168::-;9672:9;;;9703;;9720:15;;;9714:22;;9700:37;9690:71;;9741:18;;:::i;9772:640::-;10023:6;10018:3;10011:19;9993:3;10049:2;10082;10077:3;10073:12;10114:6;10108:13;10179:2;10171:6;10167:15;10200:1;10210:175;10224:6;10221:1;10218:13;10210:175;;;10287:13;;10273:28;;10323:14;;;;10360:15;;;;10246:1;10239:9;10210:175;;;-1:-1:-1;10401:5:151;;9772:640;-1:-1:-1;;;;;;;9772:640:151:o;10417:184::-;-1:-1:-1;;;10466:1:151;10459:88;10566:4;10563:1;10556:15;10590:4;10587:1;10580:15;10606:195;10645:3;-1:-1:-1;;10669:5:151;10666:77;10663:103;;10746:18;;:::i;:::-;-1:-1:-1;10793:1:151;10782:13;;10606:195::o;10806:511::-;11057:2;11046:9;11039:21;11020:4;11083:56;11135:2;11124:9;11120:18;11112:6;11083:56;:::i;:::-;11187:14;11179:6;11175:27;11170:2;11159:9;11155:18;11148:55;11251:9;11243:6;11239:22;11234:2;11223:9;11219:18;11212:50;11279:32;11304:6;11296;11279:32;:::i;11322:616::-;11633:6;11622:9;11615:25;11676:3;11671:2;11660:9;11656:18;11649:31;11596:4;11703:57;11755:3;11744:9;11740:19;11732:6;11703:57;:::i;:::-;11808:14;11800:6;11796:27;11791:2;11780:9;11776:18;11769:55;11872:9;11864:6;11860:22;11855:2;11844:9;11840:18;11833:50;11900:32;11925:6;11917;11900:32;:::i;:::-;11892:40;11322:616;-1:-1:-1;;;;;;;11322:616:151:o;11943:359::-;12146:2;12135:9;12128:21;12109:4;12166:44;12206:2;12195:9;12191:18;12183:6;12166:44;:::i;:::-;12241:2;12226:18;;12219:34;;;;-1:-1:-1;12284:2:151;12269:18;12262:34;12158:52;11943:359;-1:-1:-1;11943:359:151:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "_msgSender()": "119df25f",
    "_msgValue()": "45ec9354",
    "_world()": "e1af802c",
    "attack(address)": "d018db3e",
    "supportsInterface(bytes4)": "01ffc9a7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"}],\"name\":\"Slice_OutOfBounds\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"start\",\"type\":\"uint48\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Store_SpliceStaticData\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_msgSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_msgValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_world\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"defender\",\"type\":\"address\"}],\"name\":\"attack\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Store_SpliceStaticData(bytes32,bytes32[],uint48,bytes)\":{\"details\":\"In static data, data is always overwritten starting at the start position, so the total length of the data remains the same and no data is shifted.\",\"params\":{\"data\":\"The data to write to the static data of the record at the start byte.\",\"keyTuple\":\"An array representing the key for the record.\",\"start\":\"The start position in bytes for the splice operation.\",\"tableId\":\"The ID of the table where the data is spliced.\"}}},\"kind\":\"dev\",\"methods\":{\"_msgSender()\":{\"returns\":{\"sender\":\"The `msg.sender` in the call to the World contract before the World routed the call to the WorldContextConsumer contract.\"}},\"_msgValue()\":{\"returns\":{\"value\":\"The `msg.value` in the call to the World contract before the World routed the call to the WorldContextConsumer contract.\"}},\"_world()\":{\"returns\":{\"_0\":\"The address of the World contract that routed the call to this WorldContextConsumer.\"}},\"supportsInterface(bytes4)\":{\"params\":{\"interfaceId\":\"The ID of the interface in question.\"},\"returns\":{\"_0\":\"True if the interface is supported, false otherwise.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"Store_SpliceStaticData(bytes32,bytes32[],uint48,bytes)\":{\"notice\":\"Emitted when static data in the store is spliced.\"}},\"kind\":\"user\",\"methods\":{\"_msgSender()\":{\"notice\":\"Extract the `msg.sender` from the context appended to the calldata.\"},\"_msgValue()\":{\"notice\":\"Extract the `msg.value` from the context appended to the calldata.\"},\"_world()\":{\"notice\":\"Get the address of the World contract that routed the call to this WorldContextConsumer.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Checks if an interface is supported by the contract. using ERC-165 supportsInterface (see https://eips.ethereum.org/EIPS/eip-165)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/systems/AttackSystem.sol\":\"AttackSystem\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":3000},\"remappings\":[\":@grassland/=node_modules/@grassland/packages/contracts/\",\":@latticexyz/=node_modules/@latticexyz/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\"]},\"sources\":{\"node_modules/@grassland/packages/contracts/src/codegen/index.sol\":{\"keccak256\":\"0x8dbdde0c0c355998ad72e630fc3ccac6287625361941a3486f5d0484ef34ae34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ad5463cc1dae517026f4d51f54924694b36f4e886d56eefaa8a54c885e84590\",\"dweb:/ipfs/QmSkUxDPw3s4QRTibnsMXMDpZ61W2bd2rTeUKmpSVnwcHK\"]},\"node_modules/@grassland/packages/contracts/src/codegen/tables/Obstruction.sol\":{\"keccak256\":\"0xaebd686116fb2823ebfd171912ce9944778155b35bcda4be9514e43879f77bd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d345815fe6b65f3c914a832a12def2cc793be73892c13fa70fab73b37da0471d\",\"dweb:/ipfs/QmegavbtBggSuMGnxEzVdHQFoKeMnwfdB8ZP9i6iyf1wX9\"]},\"node_modules/@grassland/packages/contracts/src/codegen/tables/Position.sol\":{\"keccak256\":\"0xdbedb9b8baaeb66814fffeadd974c2431a0f8286d7b1ca071ec65f9d4e614c3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fdf1fa3d5f4498afc0305735cc88b52e68d07aacfa6c0f1ebcf3221d6075998a\",\"dweb:/ipfs/QmQ6SB29LjFNWvTpVpYUVLDgyGdgEMF6xPXdgYy5zHK7Ai\"]},\"node_modules/@grassland/packages/contracts/src/codegen/tables/Spawned.sol\":{\"keccak256\":\"0x0195fa0c9fe2ef724b7465a8efe4d4b78e7cef72168fcf7088c451e02877c26c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://005023c853ac3a9eec462a301f2f124f22eb2172e8d5eb29e4d22f60a04492db\",\"dweb:/ipfs/QmUkeKZYF8h77Ddg4sFbsVNpAhZDcSdKiWr1usWGnAX8Cd\"]},\"node_modules/@grassland/packages/contracts/src/positionUtils.sol\":{\"keccak256\":\"0x339a093782905945746f594b5f5e1fda4ec7ccb8330f33475e748a9a8e38955b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7ba2ef34c0b911724ca0d2119fcfe53cfc7f8d01bbebe199980ae642b61de6a\",\"dweb:/ipfs/QmSfs2Tiuq4zbjxWrZj97nJvtyMvBgBiF5ykEMKRzrqRji\"]},\"node_modules/@latticexyz/schema-type/src/solidity/SchemaType.sol\":{\"keccak256\":\"0x770eff7a38b9b7b1613dc11ca09db4f28b42a117c9b39b2a06a650a58a250bdb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39f544110658a53def52c2a4e33b8b158b95a4f14fccea58d5268b6e728d86d4\",\"dweb:/ipfs/QmTesj6tjSFbfAiKUitXapdNYWPStS8bLkB3r22qfyHwUC\"]},\"node_modules/@latticexyz/store/src/Bytes.sol\":{\"keccak256\":\"0xab31edce915377852bb5f29f7f2ccfc50cac087d64d2a8aae669715ad862d558\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3187e86e43be1fbdd59df45c695294f1114aa1ac48e6445c0cb26089434be5c4\",\"dweb:/ipfs/Qmck7shMVrcKMVkgN2pC1byPY7hb3V9fTxnUcGgxAUeXYk\"]},\"node_modules/@latticexyz/store/src/FieldLayout.sol\":{\"keccak256\":\"0x2a0536cd6cecc479d0b81d5aad6380231f4d6873beadc54814d801c2036b02c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e07c041e19146a9ec258cc700a450b4d49440202895eb12f3bb17508427c23ba\",\"dweb:/ipfs/QmXoqrCGDSkuFgNSMURRFdjokjREL78nLDzNaUi6rjefy9\"]},\"node_modules/@latticexyz/store/src/Hook.sol\":{\"keccak256\":\"0x045024523eb55d08ad8d13eca6185bff2988865f4aa12e3f9372029c2ecb8ddd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6621c53b49f8fe0557d1a1db47bfe1561801c09256948dd0652fb41541891a18\",\"dweb:/ipfs/QmZgFVCUH1pKcc9MeFyzMe1VW87SLz6c9szGwrDRUp6BZe\"]},\"node_modules/@latticexyz/store/src/IERC165.sol\":{\"keccak256\":\"0x2bbc3c43400c15a91a5cb35430a91309cb64a4d13a0a170eacec71dcf334feaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f44dfc9605067de539de07a76a34bf469faa9e6dad8c192abafc2e05860c7dd2\",\"dweb:/ipfs/QmX8xgG6XWokM7YFwFZvmMhuh1uhkSjxCMD2oTHjUVdapb\"]},\"node_modules/@latticexyz/store/src/IStore.sol\":{\"keccak256\":\"0x9092b65551d0f910e5645cebb5acadb387cdd192d75fa89cd6b293bd65b28827\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://478825a6f7eff9ddab968e71e1d55ebee279d3b318f10976d9334384000059c0\",\"dweb:/ipfs/Qme7NY976woRy3RQjE4tkkiwoXnoVtTmER3PbWCSbjZ2kb\"]},\"node_modules/@latticexyz/store/src/IStoreData.sol\":{\"keccak256\":\"0xa8eade05c551aeef35c84727d7a44af239516deb2d8a0cfb7ebeb5d88c6995e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5335910bd8a204abb5f4396fb911a5ee5c221bd7fa63b1cc8ae5e737c6458c6a\",\"dweb:/ipfs/QmckkCAfrNcWo3yDxoD1jCe1k4iDA2GzVDpFjJZs7W79vx\"]},\"node_modules/@latticexyz/store/src/IStoreErrors.sol\":{\"keccak256\":\"0xb9070663ded3cad82285bb7610949e422f88abb48c2ddbd792af83d127d64212\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://830490f1c888bec86df1e7ef43773d60ebdbdfdb2b91ab7fe074e2f38d7439dc\",\"dweb:/ipfs/QmS26fpXdZuGgMmjcdQDf9k1Bedn2dhjk9byFZJoNkctPZ\"]},\"node_modules/@latticexyz/store/src/IStoreEvents.sol\":{\"keccak256\":\"0xdd3104680808f975462a85cbd4fa87783ba5395797419caeeca37e8f8627a16f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://943864b7eb16ad2047ade5a8598e85c8a4b46d1aed6aef02bfb7cee8de732b4d\",\"dweb:/ipfs/QmTEij4caToSNk15PFpubXYDy9QhwmPyP9tMXjUse2cTdv\"]},\"node_modules/@latticexyz/store/src/IStoreHook.sol\":{\"keccak256\":\"0xa6777c7868333996ad9c61a94457dcac702d8d7445a104dfdc86543d25e7470e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6268a16449d7529a94746d0103670dd0e38faf5117bf914fb01da9947ab44c2e\",\"dweb:/ipfs/QmaSfbx1QRA3jw2K8bGkQTw4CTGPUzNqnCJW7LwaFUJCXy\"]},\"node_modules/@latticexyz/store/src/IStoreRead.sol\":{\"keccak256\":\"0xd2180d53ecd31069b1166f170ecdcd85917ac50f45fc26fb39b49cee7ba00e37\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1494bb0a3228e2d194bddaed4761fd3ca865979f0e3f3a53acd271143a4aa0ac\",\"dweb:/ipfs/Qmaddnzzmu99iP9dTWK9ZeByh5dZyjY9SpVnRdvyr2fBAo\"]},\"node_modules/@latticexyz/store/src/IStoreRegistration.sol\":{\"keccak256\":\"0xf448fbb2bc9c982721a43234463656da5a49cea08543e62148d54f11e1ac3e2f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://64b3579d9b9dcd73dca2beab3d4fcf60237420945ebbb2e9f4ffcc88f4110115\",\"dweb:/ipfs/QmaW5nN3zGEriSYHncye6Nz2TkAw1oo1CyG2JuJTJrJoXg\"]},\"node_modules/@latticexyz/store/src/IStoreWrite.sol\":{\"keccak256\":\"0x8b6c7af5ee330928aebb58c8872d3944304ee10ed11f8a325b6accc4ec5df81b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b866d158701c7a40834bed735194b804ef219f2bbe574e2307785fff7bcf9da1\",\"dweb:/ipfs/QmXzJfZkXVfyr2RFGwDuazeVnV3UWYmQxjKZ3KzFbbe75U\"]},\"node_modules/@latticexyz/store/src/Memory.sol\":{\"keccak256\":\"0x69295976e61a1a108d1b4d6eb497b238730309f3047c4320d48e01a0ce8d4ec7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://559c451b21fb9dd4fec27b41bef42f4362f1e7ebb7992106d548b9d4f733b3e5\",\"dweb:/ipfs/QmeSE7YTW5zUrfZYFVb2pFnDe3XxiT8XNecfwC3wfpxCRv\"]},\"node_modules/@latticexyz/store/src/PackedCounter.sol\":{\"keccak256\":\"0x44ddfa9eb8a861462c550f0a9d66c40c68acdb347a61fa765949608407a2c7fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47ee957f4b19cab9e20bf5fc569c015eca13852fb3351f2a105a8be9c48204c0\",\"dweb:/ipfs/QmNkyzDobVQLoq9BtQ8HtgsPLiqnmi97EZx1wsu6wp8nKH\"]},\"node_modules/@latticexyz/store/src/ResourceId.sol\":{\"keccak256\":\"0x40983c580b8958e55db4520095934a535e98544ffe8228327e598973eb6647ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://839d658fa2bb2b1f09a08149d2bf0c26a26c301ad2dda8154fc99458085a695d\",\"dweb:/ipfs/Qmd5jHHYrgqraPqF8bjzT4xyjsoPk8K7pkxXLLfz6MRT6d\"]},\"node_modules/@latticexyz/store/src/Schema.sol\":{\"keccak256\":\"0x58aef318ba03f8ff8866ef70f8a30f549b150657ea699734aefe16c298956401\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dc104690a7e2bcf5ce1afadcd58f8ef4d639b4b92b9ad9293656235d54395f3\",\"dweb:/ipfs/QmYJJvEv5KBJ3kzf9AkgRn7Uu5dp4exGTRddf4cae1btgE\"]},\"node_modules/@latticexyz/store/src/Slice.sol\":{\"keccak256\":\"0xfaf54b1f5acccd4c6ce3f8377050ee84efbb423cb604b4651e8b9ea3b467bf32\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acf2ce7ffec21f28ad1dc6da06c342f1212a03a3d16a0be7ee85715a5940718c\",\"dweb:/ipfs/QmTCN3NSdFg87hi7KS2Xtq7PsmRUMG64SxC8PtP3p2GzuT\"]},\"node_modules/@latticexyz/store/src/Storage.sol\":{\"keccak256\":\"0x0893905ebe431a414226b479a84a54804091001a406222c748adbd4b651853a5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bcfcd3848127884041f0bcd727a0e7acbddec283aa6c16ba47abc6a3be720648\",\"dweb:/ipfs/QmY5fBd53e4Ro6vzTZYsteSibSTXVA3GHTeCAiUZTa5DPZ\"]},\"node_modules/@latticexyz/store/src/StoreCore.sol\":{\"keccak256\":\"0x95b7d62d84b43777c54dd1c7d941dbb5ba0afc02c444c30cfdb1de671bbbf180\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe62a2fdb2a73610c3072f31b7f88ed3f9d03c1009fe0f0ef37a7eb814b23534\",\"dweb:/ipfs/QmV85zaV5HAD6eGc5N4RmdtmpR6EwkswVLQTaR2aJqsXrj\"]},\"node_modules/@latticexyz/store/src/StoreSwitch.sol\":{\"keccak256\":\"0xf132af10f960a498f49c0534027056e715f4bdcb8fbdb53ac6879c92309ab416\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e85a09aeb7543bcd9d74b7ad319ae61e1f7f15a6a0ad9e79aff750fbd18111c7\",\"dweb:/ipfs/QmY6xgqeeaR1FsCPLmFbVgjm1D2UyrXNABKXWLfFaSmBhR\"]},\"node_modules/@latticexyz/store/src/codegen/index.sol\":{\"keccak256\":\"0xf337a5abb2d43ef00c1c200e7fbec30fc89c7c701e457ab4277194b700d2aea3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eccdf6158076b4e8f1b587a0310228f53323705e054a44eaa7733f38805c3ee6\",\"dweb:/ipfs/QmbXEVNTctg54dK9awdCVyAjeuUjR6ckfmmXBP8DrFmjyq\"]},\"node_modules/@latticexyz/store/src/codegen/tables/Hooks.sol\":{\"keccak256\":\"0xc5c6f807cff6b4dc486525c559ba3f7cbb034ac5895636ee64c9d01defa6a38e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84d3a3b3fd3afa2ab3231fd7fe981889dfb0600deec34c5d4e9c07d3187af8a5\",\"dweb:/ipfs/Qmanj7WjETqBYQXkxKLjqWs4vMp3en3N69B5MacKme5fpD\"]},\"node_modules/@latticexyz/store/src/codegen/tables/ResourceIds.sol\":{\"keccak256\":\"0xf7a9bf3e37b486377005c556cdf5b813ea1a41278b3a0349f81e3c82a2f1c789\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92cc87add89abcb126bf3cd0b284f25065c2b9c90a49f8dba4629b28a5b87751\",\"dweb:/ipfs/QmNNBDSK5GNujERGiSUhorbmtpdD2UnGz7MqSSDasEGdub\"]},\"node_modules/@latticexyz/store/src/codegen/tables/StoreHooks.sol\":{\"keccak256\":\"0xa1186b8b6143b4a87cea1624785494398be1613cb7c6f9e57734e1cca1d5dd14\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://488c158082622689d035d7964c6ca063295e53078291c340eb6a23db08e8ff95\",\"dweb:/ipfs/QmWcjo3B5SH7jStXKAuf7qvF2ouz6syw9c7aT86PnTgRqW\"]},\"node_modules/@latticexyz/store/src/codegen/tables/Tables.sol\":{\"keccak256\":\"0xd47e1921c07fc8608157b5dc343fcef7235e891ea6a21dec1fb118a0bd797fcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01a6ad068e6991994a0939f22a55245e0c7c82fc5e274da0af616286a8acfc7a\",\"dweb:/ipfs/QmPokA3pSexzZY33MMV6BGx48ZwQegdUN5AijiAfycSDxy\"]},\"node_modules/@latticexyz/store/src/constants.sol\":{\"keccak256\":\"0x9e37c64c119ef07ad914bc589ee3f6d67946ab95877978c1ee3e2c1ffae07076\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fad47e542025382aa28e8171253e34f93b2f149434b67a26989542d70218793\",\"dweb:/ipfs/QmW6JsKNwPc6oAMrgcikgR2EPwMUtQANiuZSQSGCd29HHC\"]},\"node_modules/@latticexyz/store/src/leftMask.sol\":{\"keccak256\":\"0xd0360567e4d77c6a8e3d8a5f4bf3653ccde4d268674c50988d55695dc6193f6f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53e6bcb53fcb08ee9426225fdab7c41df91e12cb4f80d92895a6117338627401\",\"dweb:/ipfs/QmeLcaPGeMBpNSTSsPYK3PHpzKuGMjuitCweAWcoXK2mXr\"]},\"node_modules/@latticexyz/store/src/storeHookTypes.sol\":{\"keccak256\":\"0x60880298016fa117ed9a43ddfd020f11d98a2d345bdcb08e5884e40df98eddd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3619dfda1fd514c0fc5fb34c14d5b5aa41dd6ba6045d37d5f4c8199f3a826f81\",\"dweb:/ipfs/QmbzRBYfVa423gNzCitpGN3i2N9oeGYfinVE1jgtqxnNZX\"]},\"node_modules/@latticexyz/store/src/storeResourceTypes.sol\":{\"keccak256\":\"0xada1867ba72930fc5cf5562dd4e36de849dbac9c833b7969cb1b046a808fabf2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e4b5fdcaa54f567a3f8561c2c3fbc0d68c8dad892a4a8e5418bbce8efc53d84\",\"dweb:/ipfs/QmTWbYJX1yrCqrEwUKB9rGpHdRvLNU8GCkBbxnLjGD4d2t\"]},\"node_modules/@latticexyz/store/src/tightcoder/DecodeSlice.sol\":{\"keccak256\":\"0x1af0fd984640123391ec2df855d00298504b7ce186a56c2caca769cfd9e08e04\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7305a62318890d2cc6420ba7dec13d9f2c1cb67ac689015fc83b9cbccd0696f1\",\"dweb:/ipfs/QmR8jGNLbt64Tv1YZKRVBCVsd71oeUQFzGHHtpsrs4PuRq\"]},\"node_modules/@latticexyz/store/src/tightcoder/EncodeArray.sol\":{\"keccak256\":\"0x1c280d24360282e196d9c4833c58c2437108cea2af0ac7596f95be81389e306d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b4556b6eeae9328fbd9adcce346547e823c397503276a4d63effb67e00b5b49\",\"dweb:/ipfs/QmUsynVsMYzjh8oJR8YB7SRrwFMdXcsQsHBrXxLEEFxsiB\"]},\"node_modules/@latticexyz/store/src/tightcoder/TightCoder.sol\":{\"keccak256\":\"0x5cacd4cb371e0a79bc8d64f62349d568fd8b08093c11ae0c3db4f16480d8808b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12b64ddf2b5c19cf68ba93a8153ed79cbafe7a91e015d4b2f25eb1d42ab06256\",\"dweb:/ipfs/QmQz5WwztcuTbSGFv2pkhU3w5scUj1gmavoyUpduxk2v3A\"]},\"node_modules/@latticexyz/store/src/version.sol\":{\"keccak256\":\"0x01029999a48b7c1d85de84cae465dd24ec126c95b8a865cd20c7ed5dfcc0f02c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9750164ce996badb0fd7df2f526780b9cb9558912405fe46f31064bd7c522491\",\"dweb:/ipfs/QmYf8m2ZXFANRc9ysHgNkNtSF327ccxKYjCUJ49UXBKADk\"]},\"node_modules/@latticexyz/world/src/IERC165.sol\":{\"keccak256\":\"0x7997ebbdee6a2493f28e7032c7a8b906ade40f807d95734e2653c8f1b023ff47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c8ca41bb2619bf27e5bf886d1322f0e2dffd096c49f7ae6e716541dd1e1ddce5\",\"dweb:/ipfs/Qmb8zATUWWTtiWaSLjbAe6PGnJPes9ANvEyk7pYoWR3P3Y\"]},\"node_modules/@latticexyz/world/src/IWorldContextConsumer.sol\":{\"keccak256\":\"0x22b8cb3ffcc21cb1657d57fc8ac929d2d6fdd199328e6f43ad2cb54f53dcd500\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47c001f6b7c6d6e453c340618d23b1532078abb7d0fd7283405071e4e8ff8d2d\",\"dweb:/ipfs/QmRW3femBhqQCPwDEj4Jop2Dnd3EU21ufg7GDVwN4joCQu\"]},\"node_modules/@latticexyz/world/src/System.sol\":{\"keccak256\":\"0x7bece0ec86fdc458054e6db0ac4316fc98882fa3ba76b2fa107d3de5382053cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d154183426723bbf133d4dc5f8d051e9521f7b7cabe63925731fa4af99379cdd\",\"dweb:/ipfs/QmZXxPGcqknGLCwTByaZFKhqvKbrfiZkywmnh8buGTC2Mc\"]},\"node_modules/@latticexyz/world/src/WorldContext.sol\":{\"keccak256\":\"0xa11d93077d94f18683f1098b69c4713a48001ae15054476135ec9569041abb9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b1d3384def68b4061c445b55602dd9cbcd4e8c58c13db5e945f284a05c1b518\",\"dweb:/ipfs/Qma5DUZrSKZUxrxiGCpyRPWMJNdHU2wu6qDEsFWEJSnLfN\"]},\"node_modules/@latticexyz/world/src/revertWithBytes.sol\":{\"keccak256\":\"0x16795bdbfd7956d733df9ada1030ee7a1a714e3b9da5899149a7b07568c4af55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a71128b4989e78215d5fc57dae8c2f84c6b5e503c159178c0df6f642b8228df\",\"dweb:/ipfs/QmNYTfBe62SdGESZ32fxME72CbAxEqk4j79jBT7655C4u7\"]},\"src/codegen/index.sol\":{\"keccak256\":\"0xe6e48ad43102c6ea1fd4f793fd4abd16949742c0833fa7028fa3c5783d358bec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://799edcd422b58f68c1017941a3b1b71d0b49327d2f54e3b1e101ff85da50589d\",\"dweb:/ipfs/QmY9YAupYCtpmXVTqvhybSDkY1Wo2VoKTHChXxSeScXDLZ\"]},\"src/codegen/tables/CandyBalance.sol\":{\"keccak256\":\"0xbe1ef24abe2a09d36df77164609a6a8db2d15076ed96d502f3b9302b435a71fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf9e39623a3a7911368a49ad15d671a79b0609eeafe2aeddef39891d03f29461\",\"dweb:/ipfs/QmS3r9VjpegMxWsLDve5EXsRMcERYFtkmNqCtBFaByFhb8\"]},\"src/codegen/tables/CandyPosition.sol\":{\"keccak256\":\"0xb0a0ad259eb0c9cf59928fb17c77d84a6d54205e163a3ad75c1c4ebe1014c9af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://55860a3a52d7466863ab62b2b8ce8415fd1b1389f588ea78de0e6272abcf4093\",\"dweb:/ipfs/QmWivugAe7J4RLPaGAgdNPjJ1wUEiB12w9utwcbHzPzTR7\"]},\"src/codegen/tables/Health.sol\":{\"keccak256\":\"0x9d45b54ffca8cc831e8e2ad341bbf7bd11aaa7e02b2f51c9dfdd6872909c6924\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e70e431aa25ab011af3081a75b7709fcf659c649a7d95cf3547c998e8cc6ead\",\"dweb:/ipfs/QmZ5ahsxjczna31Dh8qVfWi5ddhEjLysp5nYpHqTbYqZuY\"]},\"src/codegen/tables/KillStreak.sol\":{\"keccak256\":\"0x1b8e5860b79cd0b090d8770d6dd3188f7fecb765642f3d5731f6560c4bba7182\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd113e321a7f6f9a78f6cd8a903c632091c9f43405092c48dac6c199cb73036d\",\"dweb:/ipfs/QmZFnDEzJWKwqGrc3pgeeUpsK3ritWB11G4NDCeZ33VnFb\"]},\"src/systems/AttackSystem.sol\":{\"keccak256\":\"0x042f334b5991c42f36dddb657c0169252e2e1025c6bbe7c1159ed424cb6c706d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9413aced116cabf75c8b33c3bc3c92f99ebdd25f9b95474f6ade0816420c734\",\"dweb:/ipfs/QmPsRo82aNjWGn2c5E2yXQDEkHjsQHM5sEKoWJnX7fv8My\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "start",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "end",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "Slice_OutOfBounds"
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]",
              "indexed": false
            },
            {
              "internalType": "uint48",
              "name": "start",
              "type": "uint48",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Store_SpliceStaticData",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "_msgSender",
          "outputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "_msgValue",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "_world",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "defender",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "attack"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "_msgSender()": {
            "returns": {
              "sender": "The `msg.sender` in the call to the World contract before the World routed the call to the WorldContextConsumer contract."
            }
          },
          "_msgValue()": {
            "returns": {
              "value": "The `msg.value` in the call to the World contract before the World routed the call to the WorldContextConsumer contract."
            }
          },
          "_world()": {
            "returns": {
              "_0": "The address of the World contract that routed the call to this WorldContextConsumer."
            }
          },
          "supportsInterface(bytes4)": {
            "params": {
              "interfaceId": "The ID of the interface in question."
            },
            "returns": {
              "_0": "True if the interface is supported, false otherwise."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "_msgSender()": {
            "notice": "Extract the `msg.sender` from the context appended to the calldata."
          },
          "_msgValue()": {
            "notice": "Extract the `msg.value` from the context appended to the calldata."
          },
          "_world()": {
            "notice": "Get the address of the World contract that routed the call to this WorldContextConsumer."
          },
          "supportsInterface(bytes4)": {
            "notice": "Checks if an interface is supported by the contract. using ERC-165 supportsInterface (see https://eips.ethereum.org/EIPS/eip-165)"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@grassland/=node_modules/@grassland/packages/contracts/",
        "@latticexyz/=node_modules/@latticexyz/",
        "ds-test/=node_modules/ds-test/src/",
        "forge-std/=node_modules/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 3000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/systems/AttackSystem.sol": "AttackSystem"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@grassland/packages/contracts/src/codegen/index.sol": {
        "keccak256": "0x8dbdde0c0c355998ad72e630fc3ccac6287625361941a3486f5d0484ef34ae34",
        "urls": [
          "bzz-raw://5ad5463cc1dae517026f4d51f54924694b36f4e886d56eefaa8a54c885e84590",
          "dweb:/ipfs/QmSkUxDPw3s4QRTibnsMXMDpZ61W2bd2rTeUKmpSVnwcHK"
        ],
        "license": "MIT"
      },
      "node_modules/@grassland/packages/contracts/src/codegen/tables/Obstruction.sol": {
        "keccak256": "0xaebd686116fb2823ebfd171912ce9944778155b35bcda4be9514e43879f77bd0",
        "urls": [
          "bzz-raw://d345815fe6b65f3c914a832a12def2cc793be73892c13fa70fab73b37da0471d",
          "dweb:/ipfs/QmegavbtBggSuMGnxEzVdHQFoKeMnwfdB8ZP9i6iyf1wX9"
        ],
        "license": "MIT"
      },
      "node_modules/@grassland/packages/contracts/src/codegen/tables/Position.sol": {
        "keccak256": "0xdbedb9b8baaeb66814fffeadd974c2431a0f8286d7b1ca071ec65f9d4e614c3c",
        "urls": [
          "bzz-raw://fdf1fa3d5f4498afc0305735cc88b52e68d07aacfa6c0f1ebcf3221d6075998a",
          "dweb:/ipfs/QmQ6SB29LjFNWvTpVpYUVLDgyGdgEMF6xPXdgYy5zHK7Ai"
        ],
        "license": "MIT"
      },
      "node_modules/@grassland/packages/contracts/src/codegen/tables/Spawned.sol": {
        "keccak256": "0x0195fa0c9fe2ef724b7465a8efe4d4b78e7cef72168fcf7088c451e02877c26c",
        "urls": [
          "bzz-raw://005023c853ac3a9eec462a301f2f124f22eb2172e8d5eb29e4d22f60a04492db",
          "dweb:/ipfs/QmUkeKZYF8h77Ddg4sFbsVNpAhZDcSdKiWr1usWGnAX8Cd"
        ],
        "license": "MIT"
      },
      "node_modules/@grassland/packages/contracts/src/positionUtils.sol": {
        "keccak256": "0x339a093782905945746f594b5f5e1fda4ec7ccb8330f33475e748a9a8e38955b",
        "urls": [
          "bzz-raw://f7ba2ef34c0b911724ca0d2119fcfe53cfc7f8d01bbebe199980ae642b61de6a",
          "dweb:/ipfs/QmSfs2Tiuq4zbjxWrZj97nJvtyMvBgBiF5ykEMKRzrqRji"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/schema-type/src/solidity/SchemaType.sol": {
        "keccak256": "0x770eff7a38b9b7b1613dc11ca09db4f28b42a117c9b39b2a06a650a58a250bdb",
        "urls": [
          "bzz-raw://39f544110658a53def52c2a4e33b8b158b95a4f14fccea58d5268b6e728d86d4",
          "dweb:/ipfs/QmTesj6tjSFbfAiKUitXapdNYWPStS8bLkB3r22qfyHwUC"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/store/src/Bytes.sol": {
        "keccak256": "0xab31edce915377852bb5f29f7f2ccfc50cac087d64d2a8aae669715ad862d558",
        "urls": [
          "bzz-raw://3187e86e43be1fbdd59df45c695294f1114aa1ac48e6445c0cb26089434be5c4",
          "dweb:/ipfs/Qmck7shMVrcKMVkgN2pC1byPY7hb3V9fTxnUcGgxAUeXYk"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/store/src/FieldLayout.sol": {
        "keccak256": "0x2a0536cd6cecc479d0b81d5aad6380231f4d6873beadc54814d801c2036b02c0",
        "urls": [
          "bzz-raw://e07c041e19146a9ec258cc700a450b4d49440202895eb12f3bb17508427c23ba",
          "dweb:/ipfs/QmXoqrCGDSkuFgNSMURRFdjokjREL78nLDzNaUi6rjefy9"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/store/src/Hook.sol": {
        "keccak256": "0x045024523eb55d08ad8d13eca6185bff2988865f4aa12e3f9372029c2ecb8ddd",
        "urls": [
          "bzz-raw://6621c53b49f8fe0557d1a1db47bfe1561801c09256948dd0652fb41541891a18",
          "dweb:/ipfs/QmZgFVCUH1pKcc9MeFyzMe1VW87SLz6c9szGwrDRUp6BZe"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/store/src/IERC165.sol": {
        "keccak256": "0x2bbc3c43400c15a91a5cb35430a91309cb64a4d13a0a170eacec71dcf334feaf",
        "urls": [
          "bzz-raw://f44dfc9605067de539de07a76a34bf469faa9e6dad8c192abafc2e05860c7dd2",
          "dweb:/ipfs/QmX8xgG6XWokM7YFwFZvmMhuh1uhkSjxCMD2oTHjUVdapb"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/store/src/IStore.sol": {
        "keccak256": "0x9092b65551d0f910e5645cebb5acadb387cdd192d75fa89cd6b293bd65b28827",
        "urls": [
          "bzz-raw://478825a6f7eff9ddab968e71e1d55ebee279d3b318f10976d9334384000059c0",
          "dweb:/ipfs/Qme7NY976woRy3RQjE4tkkiwoXnoVtTmER3PbWCSbjZ2kb"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/store/src/IStoreData.sol": {
        "keccak256": "0xa8eade05c551aeef35c84727d7a44af239516deb2d8a0cfb7ebeb5d88c6995e5",
        "urls": [
          "bzz-raw://5335910bd8a204abb5f4396fb911a5ee5c221bd7fa63b1cc8ae5e737c6458c6a",
          "dweb:/ipfs/QmckkCAfrNcWo3yDxoD1jCe1k4iDA2GzVDpFjJZs7W79vx"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/store/src/IStoreErrors.sol": {
        "keccak256": "0xb9070663ded3cad82285bb7610949e422f88abb48c2ddbd792af83d127d64212",
        "urls": [
          "bzz-raw://830490f1c888bec86df1e7ef43773d60ebdbdfdb2b91ab7fe074e2f38d7439dc",
          "dweb:/ipfs/QmS26fpXdZuGgMmjcdQDf9k1Bedn2dhjk9byFZJoNkctPZ"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/store/src/IStoreEvents.sol": {
        "keccak256": "0xdd3104680808f975462a85cbd4fa87783ba5395797419caeeca37e8f8627a16f",
        "urls": [
          "bzz-raw://943864b7eb16ad2047ade5a8598e85c8a4b46d1aed6aef02bfb7cee8de732b4d",
          "dweb:/ipfs/QmTEij4caToSNk15PFpubXYDy9QhwmPyP9tMXjUse2cTdv"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/store/src/IStoreHook.sol": {
        "keccak256": "0xa6777c7868333996ad9c61a94457dcac702d8d7445a104dfdc86543d25e7470e",
        "urls": [
          "bzz-raw://6268a16449d7529a94746d0103670dd0e38faf5117bf914fb01da9947ab44c2e",
          "dweb:/ipfs/QmaSfbx1QRA3jw2K8bGkQTw4CTGPUzNqnCJW7LwaFUJCXy"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/store/src/IStoreRead.sol": {
        "keccak256": "0xd2180d53ecd31069b1166f170ecdcd85917ac50f45fc26fb39b49cee7ba00e37",
        "urls": [
          "bzz-raw://1494bb0a3228e2d194bddaed4761fd3ca865979f0e3f3a53acd271143a4aa0ac",
          "dweb:/ipfs/Qmaddnzzmu99iP9dTWK9ZeByh5dZyjY9SpVnRdvyr2fBAo"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/store/src/IStoreRegistration.sol": {
        "keccak256": "0xf448fbb2bc9c982721a43234463656da5a49cea08543e62148d54f11e1ac3e2f",
        "urls": [
          "bzz-raw://64b3579d9b9dcd73dca2beab3d4fcf60237420945ebbb2e9f4ffcc88f4110115",
          "dweb:/ipfs/QmaW5nN3zGEriSYHncye6Nz2TkAw1oo1CyG2JuJTJrJoXg"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/store/src/IStoreWrite.sol": {
        "keccak256": "0x8b6c7af5ee330928aebb58c8872d3944304ee10ed11f8a325b6accc4ec5df81b",
        "urls": [
          "bzz-raw://b866d158701c7a40834bed735194b804ef219f2bbe574e2307785fff7bcf9da1",
          "dweb:/ipfs/QmXzJfZkXVfyr2RFGwDuazeVnV3UWYmQxjKZ3KzFbbe75U"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/store/src/Memory.sol": {
        "keccak256": "0x69295976e61a1a108d1b4d6eb497b238730309f3047c4320d48e01a0ce8d4ec7",
        "urls": [
          "bzz-raw://559c451b21fb9dd4fec27b41bef42f4362f1e7ebb7992106d548b9d4f733b3e5",
          "dweb:/ipfs/QmeSE7YTW5zUrfZYFVb2pFnDe3XxiT8XNecfwC3wfpxCRv"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/store/src/PackedCounter.sol": {
        "keccak256": "0x44ddfa9eb8a861462c550f0a9d66c40c68acdb347a61fa765949608407a2c7fb",
        "urls": [
          "bzz-raw://47ee957f4b19cab9e20bf5fc569c015eca13852fb3351f2a105a8be9c48204c0",
          "dweb:/ipfs/QmNkyzDobVQLoq9BtQ8HtgsPLiqnmi97EZx1wsu6wp8nKH"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/store/src/ResourceId.sol": {
        "keccak256": "0x40983c580b8958e55db4520095934a535e98544ffe8228327e598973eb6647ed",
        "urls": [
          "bzz-raw://839d658fa2bb2b1f09a08149d2bf0c26a26c301ad2dda8154fc99458085a695d",
          "dweb:/ipfs/Qmd5jHHYrgqraPqF8bjzT4xyjsoPk8K7pkxXLLfz6MRT6d"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/store/src/Schema.sol": {
        "keccak256": "0x58aef318ba03f8ff8866ef70f8a30f549b150657ea699734aefe16c298956401",
        "urls": [
          "bzz-raw://7dc104690a7e2bcf5ce1afadcd58f8ef4d639b4b92b9ad9293656235d54395f3",
          "dweb:/ipfs/QmYJJvEv5KBJ3kzf9AkgRn7Uu5dp4exGTRddf4cae1btgE"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/store/src/Slice.sol": {
        "keccak256": "0xfaf54b1f5acccd4c6ce3f8377050ee84efbb423cb604b4651e8b9ea3b467bf32",
        "urls": [
          "bzz-raw://acf2ce7ffec21f28ad1dc6da06c342f1212a03a3d16a0be7ee85715a5940718c",
          "dweb:/ipfs/QmTCN3NSdFg87hi7KS2Xtq7PsmRUMG64SxC8PtP3p2GzuT"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/store/src/Storage.sol": {
        "keccak256": "0x0893905ebe431a414226b479a84a54804091001a406222c748adbd4b651853a5",
        "urls": [
          "bzz-raw://bcfcd3848127884041f0bcd727a0e7acbddec283aa6c16ba47abc6a3be720648",
          "dweb:/ipfs/QmY5fBd53e4Ro6vzTZYsteSibSTXVA3GHTeCAiUZTa5DPZ"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/store/src/StoreCore.sol": {
        "keccak256": "0x95b7d62d84b43777c54dd1c7d941dbb5ba0afc02c444c30cfdb1de671bbbf180",
        "urls": [
          "bzz-raw://fe62a2fdb2a73610c3072f31b7f88ed3f9d03c1009fe0f0ef37a7eb814b23534",
          "dweb:/ipfs/QmV85zaV5HAD6eGc5N4RmdtmpR6EwkswVLQTaR2aJqsXrj"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/store/src/StoreSwitch.sol": {
        "keccak256": "0xf132af10f960a498f49c0534027056e715f4bdcb8fbdb53ac6879c92309ab416",
        "urls": [
          "bzz-raw://e85a09aeb7543bcd9d74b7ad319ae61e1f7f15a6a0ad9e79aff750fbd18111c7",
          "dweb:/ipfs/QmY6xgqeeaR1FsCPLmFbVgjm1D2UyrXNABKXWLfFaSmBhR"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/store/src/codegen/index.sol": {
        "keccak256": "0xf337a5abb2d43ef00c1c200e7fbec30fc89c7c701e457ab4277194b700d2aea3",
        "urls": [
          "bzz-raw://eccdf6158076b4e8f1b587a0310228f53323705e054a44eaa7733f38805c3ee6",
          "dweb:/ipfs/QmbXEVNTctg54dK9awdCVyAjeuUjR6ckfmmXBP8DrFmjyq"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/store/src/codegen/tables/Hooks.sol": {
        "keccak256": "0xc5c6f807cff6b4dc486525c559ba3f7cbb034ac5895636ee64c9d01defa6a38e",
        "urls": [
          "bzz-raw://84d3a3b3fd3afa2ab3231fd7fe981889dfb0600deec34c5d4e9c07d3187af8a5",
          "dweb:/ipfs/Qmanj7WjETqBYQXkxKLjqWs4vMp3en3N69B5MacKme5fpD"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/store/src/codegen/tables/ResourceIds.sol": {
        "keccak256": "0xf7a9bf3e37b486377005c556cdf5b813ea1a41278b3a0349f81e3c82a2f1c789",
        "urls": [
          "bzz-raw://92cc87add89abcb126bf3cd0b284f25065c2b9c90a49f8dba4629b28a5b87751",
          "dweb:/ipfs/QmNNBDSK5GNujERGiSUhorbmtpdD2UnGz7MqSSDasEGdub"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/store/src/codegen/tables/StoreHooks.sol": {
        "keccak256": "0xa1186b8b6143b4a87cea1624785494398be1613cb7c6f9e57734e1cca1d5dd14",
        "urls": [
          "bzz-raw://488c158082622689d035d7964c6ca063295e53078291c340eb6a23db08e8ff95",
          "dweb:/ipfs/QmWcjo3B5SH7jStXKAuf7qvF2ouz6syw9c7aT86PnTgRqW"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/store/src/codegen/tables/Tables.sol": {
        "keccak256": "0xd47e1921c07fc8608157b5dc343fcef7235e891ea6a21dec1fb118a0bd797fcb",
        "urls": [
          "bzz-raw://01a6ad068e6991994a0939f22a55245e0c7c82fc5e274da0af616286a8acfc7a",
          "dweb:/ipfs/QmPokA3pSexzZY33MMV6BGx48ZwQegdUN5AijiAfycSDxy"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/store/src/constants.sol": {
        "keccak256": "0x9e37c64c119ef07ad914bc589ee3f6d67946ab95877978c1ee3e2c1ffae07076",
        "urls": [
          "bzz-raw://3fad47e542025382aa28e8171253e34f93b2f149434b67a26989542d70218793",
          "dweb:/ipfs/QmW6JsKNwPc6oAMrgcikgR2EPwMUtQANiuZSQSGCd29HHC"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/store/src/leftMask.sol": {
        "keccak256": "0xd0360567e4d77c6a8e3d8a5f4bf3653ccde4d268674c50988d55695dc6193f6f",
        "urls": [
          "bzz-raw://53e6bcb53fcb08ee9426225fdab7c41df91e12cb4f80d92895a6117338627401",
          "dweb:/ipfs/QmeLcaPGeMBpNSTSsPYK3PHpzKuGMjuitCweAWcoXK2mXr"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/store/src/storeHookTypes.sol": {
        "keccak256": "0x60880298016fa117ed9a43ddfd020f11d98a2d345bdcb08e5884e40df98eddd5",
        "urls": [
          "bzz-raw://3619dfda1fd514c0fc5fb34c14d5b5aa41dd6ba6045d37d5f4c8199f3a826f81",
          "dweb:/ipfs/QmbzRBYfVa423gNzCitpGN3i2N9oeGYfinVE1jgtqxnNZX"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/store/src/storeResourceTypes.sol": {
        "keccak256": "0xada1867ba72930fc5cf5562dd4e36de849dbac9c833b7969cb1b046a808fabf2",
        "urls": [
          "bzz-raw://6e4b5fdcaa54f567a3f8561c2c3fbc0d68c8dad892a4a8e5418bbce8efc53d84",
          "dweb:/ipfs/QmTWbYJX1yrCqrEwUKB9rGpHdRvLNU8GCkBbxnLjGD4d2t"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/store/src/tightcoder/DecodeSlice.sol": {
        "keccak256": "0x1af0fd984640123391ec2df855d00298504b7ce186a56c2caca769cfd9e08e04",
        "urls": [
          "bzz-raw://7305a62318890d2cc6420ba7dec13d9f2c1cb67ac689015fc83b9cbccd0696f1",
          "dweb:/ipfs/QmR8jGNLbt64Tv1YZKRVBCVsd71oeUQFzGHHtpsrs4PuRq"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/store/src/tightcoder/EncodeArray.sol": {
        "keccak256": "0x1c280d24360282e196d9c4833c58c2437108cea2af0ac7596f95be81389e306d",
        "urls": [
          "bzz-raw://6b4556b6eeae9328fbd9adcce346547e823c397503276a4d63effb67e00b5b49",
          "dweb:/ipfs/QmUsynVsMYzjh8oJR8YB7SRrwFMdXcsQsHBrXxLEEFxsiB"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/store/src/tightcoder/TightCoder.sol": {
        "keccak256": "0x5cacd4cb371e0a79bc8d64f62349d568fd8b08093c11ae0c3db4f16480d8808b",
        "urls": [
          "bzz-raw://12b64ddf2b5c19cf68ba93a8153ed79cbafe7a91e015d4b2f25eb1d42ab06256",
          "dweb:/ipfs/QmQz5WwztcuTbSGFv2pkhU3w5scUj1gmavoyUpduxk2v3A"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/store/src/version.sol": {
        "keccak256": "0x01029999a48b7c1d85de84cae465dd24ec126c95b8a865cd20c7ed5dfcc0f02c",
        "urls": [
          "bzz-raw://9750164ce996badb0fd7df2f526780b9cb9558912405fe46f31064bd7c522491",
          "dweb:/ipfs/QmYf8m2ZXFANRc9ysHgNkNtSF327ccxKYjCUJ49UXBKADk"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/world/src/IERC165.sol": {
        "keccak256": "0x7997ebbdee6a2493f28e7032c7a8b906ade40f807d95734e2653c8f1b023ff47",
        "urls": [
          "bzz-raw://c8ca41bb2619bf27e5bf886d1322f0e2dffd096c49f7ae6e716541dd1e1ddce5",
          "dweb:/ipfs/Qmb8zATUWWTtiWaSLjbAe6PGnJPes9ANvEyk7pYoWR3P3Y"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/world/src/IWorldContextConsumer.sol": {
        "keccak256": "0x22b8cb3ffcc21cb1657d57fc8ac929d2d6fdd199328e6f43ad2cb54f53dcd500",
        "urls": [
          "bzz-raw://47c001f6b7c6d6e453c340618d23b1532078abb7d0fd7283405071e4e8ff8d2d",
          "dweb:/ipfs/QmRW3femBhqQCPwDEj4Jop2Dnd3EU21ufg7GDVwN4joCQu"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/world/src/System.sol": {
        "keccak256": "0x7bece0ec86fdc458054e6db0ac4316fc98882fa3ba76b2fa107d3de5382053cd",
        "urls": [
          "bzz-raw://d154183426723bbf133d4dc5f8d051e9521f7b7cabe63925731fa4af99379cdd",
          "dweb:/ipfs/QmZXxPGcqknGLCwTByaZFKhqvKbrfiZkywmnh8buGTC2Mc"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/world/src/WorldContext.sol": {
        "keccak256": "0xa11d93077d94f18683f1098b69c4713a48001ae15054476135ec9569041abb9a",
        "urls": [
          "bzz-raw://9b1d3384def68b4061c445b55602dd9cbcd4e8c58c13db5e945f284a05c1b518",
          "dweb:/ipfs/Qma5DUZrSKZUxrxiGCpyRPWMJNdHU2wu6qDEsFWEJSnLfN"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/world/src/revertWithBytes.sol": {
        "keccak256": "0x16795bdbfd7956d733df9ada1030ee7a1a714e3b9da5899149a7b07568c4af55",
        "urls": [
          "bzz-raw://7a71128b4989e78215d5fc57dae8c2f84c6b5e503c159178c0df6f642b8228df",
          "dweb:/ipfs/QmNYTfBe62SdGESZ32fxME72CbAxEqk4j79jBT7655C4u7"
        ],
        "license": "MIT"
      },
      "src/codegen/index.sol": {
        "keccak256": "0xe6e48ad43102c6ea1fd4f793fd4abd16949742c0833fa7028fa3c5783d358bec",
        "urls": [
          "bzz-raw://799edcd422b58f68c1017941a3b1b71d0b49327d2f54e3b1e101ff85da50589d",
          "dweb:/ipfs/QmY9YAupYCtpmXVTqvhybSDkY1Wo2VoKTHChXxSeScXDLZ"
        ],
        "license": "MIT"
      },
      "src/codegen/tables/CandyBalance.sol": {
        "keccak256": "0xbe1ef24abe2a09d36df77164609a6a8db2d15076ed96d502f3b9302b435a71fa",
        "urls": [
          "bzz-raw://bf9e39623a3a7911368a49ad15d671a79b0609eeafe2aeddef39891d03f29461",
          "dweb:/ipfs/QmS3r9VjpegMxWsLDve5EXsRMcERYFtkmNqCtBFaByFhb8"
        ],
        "license": "MIT"
      },
      "src/codegen/tables/CandyPosition.sol": {
        "keccak256": "0xb0a0ad259eb0c9cf59928fb17c77d84a6d54205e163a3ad75c1c4ebe1014c9af",
        "urls": [
          "bzz-raw://55860a3a52d7466863ab62b2b8ce8415fd1b1389f588ea78de0e6272abcf4093",
          "dweb:/ipfs/QmWivugAe7J4RLPaGAgdNPjJ1wUEiB12w9utwcbHzPzTR7"
        ],
        "license": "MIT"
      },
      "src/codegen/tables/Health.sol": {
        "keccak256": "0x9d45b54ffca8cc831e8e2ad341bbf7bd11aaa7e02b2f51c9dfdd6872909c6924",
        "urls": [
          "bzz-raw://4e70e431aa25ab011af3081a75b7709fcf659c649a7d95cf3547c998e8cc6ead",
          "dweb:/ipfs/QmZ5ahsxjczna31Dh8qVfWi5ddhEjLysp5nYpHqTbYqZuY"
        ],
        "license": "MIT"
      },
      "src/codegen/tables/KillStreak.sol": {
        "keccak256": "0x1b8e5860b79cd0b090d8770d6dd3188f7fecb765642f3d5731f6560c4bba7182",
        "urls": [
          "bzz-raw://dd113e321a7f6f9a78f6cd8a903c632091c9f43405092c48dac6c199cb73036d",
          "dweb:/ipfs/QmZFnDEzJWKwqGrc3pgeeUpsK3ritWB11G4NDCeZ33VnFb"
        ],
        "license": "MIT"
      },
      "src/systems/AttackSystem.sol": {
        "keccak256": "0x042f334b5991c42f36dddb657c0169252e2e1025c6bbe7c1159ed424cb6c706d",
        "urls": [
          "bzz-raw://d9413aced116cabf75c8b33c3bc3c92f99ebdd25f9b95474f6ade0816420c734",
          "dweb:/ipfs/QmPsRo82aNjWGn2c5E2yXQDEkHjsQHM5sEKoWJnX7fv8My"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/systems/AttackSystem.sol",
    "id": 84003,
    "exportedSymbols": {
      "AttackSystem": [
        84002
      ],
      "CandyBalance": [
        81233
      ],
      "CandyPosition": [
        82175
      ],
      "Health": [
        82985
      ],
      "KillStreak": [
        83785
      ],
      "Position": [
        86396
      ],
      "PositionData": [
        85220
      ],
      "System": [
        72195
      ],
      "distance": [
        63150
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1665:149",
    "nodes": [
      {
        "id": 83823,
        "nodeType": "PragmaDirective",
        "src": "32:25:149",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".21"
        ]
      },
      {
        "id": 83825,
        "nodeType": "ImportDirective",
        "src": "58:58:149",
        "nodes": [],
        "absolutePath": "node_modules/@latticexyz/world/src/System.sol",
        "file": "@latticexyz/world/src/System.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 84003,
        "sourceUnit": 72196,
        "symbolAliases": [
          {
            "foreign": {
              "id": 83824,
              "name": "System",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 72195,
              "src": "67:6:149",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 83828,
        "nodeType": "ImportDirective",
        "src": "118:74:149",
        "nodes": [],
        "absolutePath": "node_modules/@grassland/packages/contracts/src/codegen/index.sol",
        "file": "@grassland/src/codegen/index.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 84003,
        "sourceUnit": 63105,
        "symbolAliases": [
          {
            "foreign": {
              "id": 83826,
              "name": "Position",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 86396,
              "src": "127:8:149",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 83827,
              "name": "PositionData",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 85220,
              "src": "137:12:149",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 83830,
        "nodeType": "ImportDirective",
        "src": "193:60:149",
        "nodes": [],
        "absolutePath": "node_modules/@grassland/packages/contracts/src/positionUtils.sol",
        "file": "@grassland/src/positionUtils.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 84003,
        "sourceUnit": 63151,
        "symbolAliases": [
          {
            "foreign": {
              "id": 83829,
              "name": "distance",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 63150,
              "src": "202:8:149",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 83835,
        "nodeType": "ImportDirective",
        "src": "254:87:149",
        "nodes": [],
        "absolutePath": "src/codegen/index.sol",
        "file": "../codegen/index.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 84003,
        "sourceUnit": 80434,
        "symbolAliases": [
          {
            "foreign": {
              "id": 83831,
              "name": "CandyPosition",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 82175,
              "src": "263:13:149",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 83832,
              "name": "CandyBalance",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 81233,
              "src": "278:12:149",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 83833,
              "name": "Health",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 82985,
              "src": "292:6:149",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 83834,
              "name": "KillStreak",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 83785,
              "src": "300:10:149",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 84002,
        "nodeType": "ContractDefinition",
        "src": "343:1354:149",
        "nodes": [
          {
            "id": 84001,
            "nodeType": "FunctionDefinition",
            "src": "379:1316:149",
            "nodes": [],
            "body": {
              "id": 84000,
              "nodeType": "Block",
              "src": "420:1275:149",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    83843
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83843,
                      "mutability": "mutable",
                      "name": "attacker",
                      "nameLocation": "434:8:149",
                      "nodeType": "VariableDeclaration",
                      "scope": 84000,
                      "src": "426:16:149",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 83842,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "426:7:149",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 83846,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 83844,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 93733,
                      "src": "445:10:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 83845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "445:12:149",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "426:31:149"
                },
                {
                  "assignments": [
                    83849
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83849,
                      "mutability": "mutable",
                      "name": "attackerPosition",
                      "nameLocation": "483:16:149",
                      "nodeType": "VariableDeclaration",
                      "scope": 84000,
                      "src": "463:36:149",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PositionData_$85220_memory_ptr",
                        "typeString": "struct PositionData"
                      },
                      "typeName": {
                        "id": 83848,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 83847,
                          "name": "PositionData",
                          "nameLocations": [
                            "463:12:149"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 85220,
                          "src": "463:12:149"
                        },
                        "referencedDeclaration": 85220,
                        "src": "463:12:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PositionData_$85220_storage_ptr",
                          "typeString": "struct PositionData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 83854,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 83852,
                        "name": "attacker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83843,
                        "src": "515:8:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 83850,
                        "name": "Position",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86396,
                        "src": "502:8:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Position_$86396_$",
                          "typeString": "type(library Position)"
                        }
                      },
                      "id": 83851,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "511:3:149",
                      "memberName": "get",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 85859,
                      "src": "502:12:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_struct$_PositionData_$85220_memory_ptr_$",
                        "typeString": "function (address) view returns (struct PositionData memory)"
                      }
                    },
                    "id": 83853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "502:22:149",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PositionData_$85220_memory_ptr",
                      "typeString": "struct PositionData memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "463:61:149"
                },
                {
                  "assignments": [
                    83857
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83857,
                      "mutability": "mutable",
                      "name": "defenderPosition",
                      "nameLocation": "550:16:149",
                      "nodeType": "VariableDeclaration",
                      "scope": 84000,
                      "src": "530:36:149",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PositionData_$85220_memory_ptr",
                        "typeString": "struct PositionData"
                      },
                      "typeName": {
                        "id": 83856,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 83855,
                          "name": "PositionData",
                          "nameLocations": [
                            "530:12:149"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 85220,
                          "src": "530:12:149"
                        },
                        "referencedDeclaration": 85220,
                        "src": "530:12:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PositionData_$85220_storage_ptr",
                          "typeString": "struct PositionData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 83862,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 83860,
                        "name": "defender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83839,
                        "src": "582:8:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 83858,
                        "name": "Position",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86396,
                        "src": "569:8:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Position_$86396_$",
                          "typeString": "type(library Position)"
                        }
                      },
                      "id": 83859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "578:3:149",
                      "memberName": "get",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 85859,
                      "src": "569:12:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_struct$_PositionData_$85220_memory_ptr_$",
                        "typeString": "function (address) view returns (struct PositionData memory)"
                      }
                    },
                    "id": 83861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "569:22:149",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PositionData_$85220_memory_ptr",
                      "typeString": "struct PositionData memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "530:61:149"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 83874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 83864,
                            "name": "attackerPosition",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83849,
                            "src": "610:16:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PositionData_$85220_memory_ptr",
                              "typeString": "struct PositionData memory"
                            }
                          },
                          "id": 83865,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "627:1:149",
                          "memberName": "x",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 85217,
                          "src": "610:18:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        {
                          "expression": {
                            "id": 83866,
                            "name": "attackerPosition",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83849,
                            "src": "630:16:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PositionData_$85220_memory_ptr",
                              "typeString": "struct PositionData memory"
                            }
                          },
                          "id": 83867,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "647:1:149",
                          "memberName": "y",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 85219,
                          "src": "630:18:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        {
                          "expression": {
                            "id": 83868,
                            "name": "defenderPosition",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83857,
                            "src": "650:16:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PositionData_$85220_memory_ptr",
                              "typeString": "struct PositionData memory"
                            }
                          },
                          "id": 83869,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "667:1:149",
                          "memberName": "x",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 85217,
                          "src": "650:18:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        {
                          "expression": {
                            "id": 83870,
                            "name": "defenderPosition",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83857,
                            "src": "670:16:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PositionData_$85220_memory_ptr",
                              "typeString": "struct PositionData memory"
                            }
                          },
                          "id": 83871,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "687:1:149",
                          "memberName": "y",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 85219,
                          "src": "670:18:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "id": 83863,
                        "name": "distance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63150,
                        "src": "601:8:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint32_$_t_uint32_$_t_uint32_$_t_uint32_$returns$_t_uint32_$",
                          "typeString": "function (uint32,uint32,uint32,uint32) pure returns (uint32)"
                        }
                      },
                      "id": 83872,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "601:88:149",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 83873,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "692:1:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "601:92:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 83880,
                  "nodeType": "IfStatement",
                  "src": "597:177:149",
                  "trueBody": {
                    "id": 83879,
                    "nodeType": "Block",
                    "src": "695:79:149",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "63616e206f6e6c792061747461636b20616e6f7468657220706c6179657220617420616e2061646a6163656e7420706f736974696f6e",
                              "id": 83876,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "710:56:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_23bc8d28cf4a4895cd452b4b4118234135fd7227548e69c738c81e91b256fd94",
                                "typeString": "literal_string \"can only attack another player at an adjacent position\""
                              },
                              "value": "can only attack another player at an adjacent position"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_23bc8d28cf4a4895cd452b4b4118234135fd7227548e69c738c81e91b256fd94",
                                "typeString": "literal_string \"can only attack another player at an adjacent position\""
                              }
                            ],
                            "id": 83875,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "703:6:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 83877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "703:64:149",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 83878,
                        "nodeType": "ExpressionStatement",
                        "src": "703:64:149"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    83882
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83882,
                      "mutability": "mutable",
                      "name": "attackerBalance",
                      "nameLocation": "788:15:149",
                      "nodeType": "VariableDeclaration",
                      "scope": 84000,
                      "src": "780:23:149",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 83881,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "780:7:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 83887,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 83885,
                        "name": "attacker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83843,
                        "src": "823:8:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 83883,
                        "name": "CandyBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81233,
                        "src": "806:12:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CandyBalance_$81233_$",
                          "typeString": "type(library CandyBalance)"
                        }
                      },
                      "id": 83884,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "819:3:149",
                      "memberName": "get",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 80817,
                      "src": "806:16:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 83886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "806:26:149",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "780:52:149"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 83890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 83888,
                      "name": "attackerBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83882,
                      "src": "842:15:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 83889,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "861:1:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "842:20:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 83896,
                  "nodeType": "IfStatement",
                  "src": "838:85:149",
                  "trueBody": {
                    "id": 83895,
                    "nodeType": "Block",
                    "src": "864:59:149",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "61747461636b6572206d75737420686176652063616e647920746f2061747461636b",
                              "id": 83892,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "879:36:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3d43c3c26a5e5705f1c02c51a662d7357742e3b2455767959dd29ff9c55d76a3",
                                "typeString": "literal_string \"attacker must have candy to attack\""
                              },
                              "value": "attacker must have candy to attack"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_3d43c3c26a5e5705f1c02c51a662d7357742e3b2455767959dd29ff9c55d76a3",
                                "typeString": "literal_string \"attacker must have candy to attack\""
                              }
                            ],
                            "id": 83891,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "872:6:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 83893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "872:44:149",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 83894,
                        "nodeType": "ExpressionStatement",
                        "src": "872:44:149"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    83898
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83898,
                      "mutability": "mutable",
                      "name": "defenderBalance",
                      "nameLocation": "936:15:149",
                      "nodeType": "VariableDeclaration",
                      "scope": 84000,
                      "src": "928:23:149",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 83897,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "928:7:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 83903,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 83901,
                        "name": "defender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83839,
                        "src": "971:8:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 83899,
                        "name": "CandyBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81233,
                        "src": "954:12:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CandyBalance_$81233_$",
                          "typeString": "type(library CandyBalance)"
                        }
                      },
                      "id": 83900,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "967:3:149",
                      "memberName": "get",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 80817,
                      "src": "954:16:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 83902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "954:26:149",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "928:52:149"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 83906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 83904,
                      "name": "defenderBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83898,
                      "src": "990:15:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 83905,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1009:1:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "990:20:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 83912,
                  "nodeType": "IfStatement",
                  "src": "986:90:149",
                  "trueBody": {
                    "id": 83911,
                    "nodeType": "Block",
                    "src": "1012:64:149",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "646566656e646572206d75737420686176652063616e647920746f2062652061747461636b6564",
                              "id": 83908,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1027:41:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6ff34fe9fa56c3a54c23f81da8eb84d7d59c1deed1abc27862160b6f1491693d",
                                "typeString": "literal_string \"defender must have candy to be attacked\""
                              },
                              "value": "defender must have candy to be attacked"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_6ff34fe9fa56c3a54c23f81da8eb84d7d59c1deed1abc27862160b6f1491693d",
                                "typeString": "literal_string \"defender must have candy to be attacked\""
                              }
                            ],
                            "id": 83907,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "1020:6:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 83909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1020:49:149",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 83910,
                        "nodeType": "ExpressionStatement",
                        "src": "1020:49:149"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    83914
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83914,
                      "mutability": "mutable",
                      "name": "attackValue",
                      "nameLocation": "1090:11:149",
                      "nodeType": "VariableDeclaration",
                      "scope": 84000,
                      "src": "1082:19:149",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 83913,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1082:7:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 83915,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1082:19:149"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 83918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 83916,
                      "name": "attackerBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83882,
                      "src": "1111:15:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 83917,
                      "name": "defenderBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83898,
                      "src": "1129:15:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1111:33:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 83930,
                    "nodeType": "Block",
                    "src": "1214:30:149",
                    "statements": [
                      {
                        "expression": {
                          "id": 83928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 83926,
                            "name": "attackValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83914,
                            "src": "1222:11:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 83927,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1236:1:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1222:15:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 83929,
                        "nodeType": "ExpressionStatement",
                        "src": "1222:15:149"
                      }
                    ]
                  },
                  "id": 83931,
                  "nodeType": "IfStatement",
                  "src": "1107:137:149",
                  "trueBody": {
                    "id": 83925,
                    "nodeType": "Block",
                    "src": "1146:62:149",
                    "statements": [
                      {
                        "expression": {
                          "id": 83923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 83919,
                            "name": "attackValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83914,
                            "src": "1154:11:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 83922,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 83920,
                              "name": "attackerBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 83882,
                              "src": "1168:15:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 83921,
                              "name": "defenderBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 83898,
                              "src": "1186:15:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1168:33:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1154:47:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 83924,
                        "nodeType": "ExpressionStatement",
                        "src": "1154:47:149"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    83933
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83933,
                      "mutability": "mutable",
                      "name": "defenderHealth",
                      "nameLocation": "1257:14:149",
                      "nodeType": "VariableDeclaration",
                      "scope": 84000,
                      "src": "1250:21:149",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 83932,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1250:6:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 83938,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 83936,
                        "name": "defender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83839,
                        "src": "1285:8:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 83934,
                        "name": "Health",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82985,
                        "src": "1274:6:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Health_$82985_$",
                          "typeString": "type(library Health)"
                        }
                      },
                      "id": 83935,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1281:3:149",
                      "memberName": "get",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 82569,
                      "src": "1274:10:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint32_$",
                        "typeString": "function (address) view returns (uint32)"
                      }
                    },
                    "id": 83937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1274:20:149",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1250:44:149"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 83941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 83939,
                      "name": "attackValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83914,
                      "src": "1304:11:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 83940,
                      "name": "defenderHealth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83933,
                      "src": "1319:14:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "1304:29:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 83951,
                    "nodeType": "Block",
                    "src": "1374:34:149",
                    "statements": [
                      {
                        "expression": {
                          "id": 83949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 83947,
                            "name": "defenderHealth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83933,
                            "src": "1382:14:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 83948,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1400:1:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1382:19:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 83950,
                        "nodeType": "ExpressionStatement",
                        "src": "1382:19:149"
                      }
                    ]
                  },
                  "id": 83952,
                  "nodeType": "IfStatement",
                  "src": "1300:108:149",
                  "trueBody": {
                    "id": 83946,
                    "nodeType": "Block",
                    "src": "1335:33:149",
                    "statements": [
                      {
                        "expression": {
                          "id": 83944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 83942,
                            "name": "defenderHealth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83933,
                            "src": "1343:14:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 83943,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1360:1:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1343:18:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 83945,
                        "nodeType": "ExpressionStatement",
                        "src": "1343:18:149"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83956,
                        "name": "defender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83839,
                        "src": "1424:8:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 83957,
                        "name": "defenderHealth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83933,
                        "src": "1434:14:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "id": 83953,
                        "name": "Health",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82985,
                        "src": "1413:6:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Health_$82985_$",
                          "typeString": "type(library Health)"
                        }
                      },
                      "id": 83955,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1420:3:149",
                      "memberName": "set",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 82770,
                      "src": "1413:10:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint32_$returns$__$",
                        "typeString": "function (address,uint32)"
                      }
                    },
                    "id": 83958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1413:36:149",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83959,
                  "nodeType": "ExpressionStatement",
                  "src": "1413:36:149"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 83962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 83960,
                      "name": "defenderHealth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83933,
                      "src": "1459:14:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 83961,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1477:1:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1459:19:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 83999,
                  "nodeType": "IfStatement",
                  "src": "1455:236:149",
                  "trueBody": {
                    "id": 83998,
                    "nodeType": "Block",
                    "src": "1480:211:149",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 83966,
                              "name": "attacker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 83843,
                              "src": "1505:8:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 83969,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 83967,
                                "name": "attackerBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 83882,
                                "src": "1515:15:149",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 83968,
                                "name": "defenderBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 83898,
                                "src": "1533:15:149",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1515:33:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 83963,
                              "name": "CandyBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 81233,
                              "src": "1488:12:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_CandyBalance_$81233_$",
                                "typeString": "type(library CandyBalance)"
                              }
                            },
                            "id": 83965,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1501:3:149",
                            "memberName": "set",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 81018,
                            "src": "1488:16:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 83970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1488:61:149",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 83971,
                        "nodeType": "ExpressionStatement",
                        "src": "1488:61:149"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 83975,
                              "name": "defender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 83839,
                              "src": "1574:8:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 83976,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1584:1:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 83972,
                              "name": "CandyBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 81233,
                              "src": "1557:12:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_CandyBalance_$81233_$",
                                "typeString": "type(library CandyBalance)"
                              }
                            },
                            "id": 83974,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1570:3:149",
                            "memberName": "set",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 81018,
                            "src": "1557:16:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 83977,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1557:29:149",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 83978,
                        "nodeType": "ExpressionStatement",
                        "src": "1557:29:149"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 83982,
                              "name": "attacker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 83843,
                              "src": "1610:8:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              "id": 83988,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 83985,
                                    "name": "attacker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 83843,
                                    "src": "1635:8:149",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 83983,
                                    "name": "KillStreak",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 83785,
                                    "src": "1620:10:149",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_KillStreak_$83785_$",
                                      "typeString": "type(library KillStreak)"
                                    }
                                  },
                                  "id": 83984,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1631:3:149",
                                  "memberName": "get",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 83369,
                                  "src": "1620:14:149",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint32_$",
                                    "typeString": "function (address) view returns (uint32)"
                                  }
                                },
                                "id": 83986,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1620:24:149",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 83987,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1647:1:149",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "1620:28:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "expression": {
                              "id": 83979,
                              "name": "KillStreak",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 83785,
                              "src": "1595:10:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_KillStreak_$83785_$",
                                "typeString": "type(library KillStreak)"
                              }
                            },
                            "id": 83981,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1606:3:149",
                            "memberName": "set",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 83570,
                            "src": "1595:14:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint32_$returns$__$",
                              "typeString": "function (address,uint32)"
                            }
                          },
                          "id": 83989,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1595:54:149",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 83990,
                        "nodeType": "ExpressionStatement",
                        "src": "1595:54:149"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 83994,
                              "name": "defender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 83839,
                              "src": "1672:8:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 83995,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1682:1:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 83991,
                              "name": "KillStreak",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 83785,
                              "src": "1657:10:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_KillStreak_$83785_$",
                                "typeString": "type(library KillStreak)"
                              }
                            },
                            "id": 83993,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1668:3:149",
                            "memberName": "set",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 83570,
                            "src": "1657:14:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint32_$returns$__$",
                              "typeString": "function (address,uint32)"
                            }
                          },
                          "id": 83996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1657:27:149",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 83997,
                        "nodeType": "ExpressionStatement",
                        "src": "1657:27:149"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "d018db3e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "attack",
            "nameLocation": "388:6:149",
            "parameters": {
              "id": 83840,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83839,
                  "mutability": "mutable",
                  "name": "defender",
                  "nameLocation": "403:8:149",
                  "nodeType": "VariableDeclaration",
                  "scope": 84001,
                  "src": "395:16:149",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 83838,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "395:7:149",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "394:18:149"
            },
            "returnParameters": {
              "id": 83841,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "420:0:149"
            },
            "scope": 84002,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 83836,
              "name": "System",
              "nameLocations": [
                "368:6:149"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 72195,
              "src": "368:6:149"
            },
            "id": 83837,
            "nodeType": "InheritanceSpecifier",
            "src": "368:6:149"
          }
        ],
        "canonicalName": "AttackSystem",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          84002,
          72195,
          93773,
          129584,
          129541
        ],
        "name": "AttackSystem",
        "nameLocation": "352:12:149",
        "scope": 84003,
        "usedErrors": [
          65910
        ],
        "usedEvents": [
          66222
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 149
}